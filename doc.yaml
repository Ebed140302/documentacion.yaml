openapi: 3.0.0
info:
  description: "API de RenPlay para la gestión de contenidos multimedia"
  version: "1.0.0"
  title: "RenPlay API"
  contact:
    name: RenPlay
 
tags:
  - name: "music"
    description: "Operaciones relacionadas con la música"
  - name: "audiobooks"
    description: "Operaciones relacionadas con los audiolibros"
  - name: "subscription"
    description: "Gestión de suscripciones de usuarios"
  - name: "creators"
    description: "Interacciones con los creadores de contenido"
  - name: "homeLib"
    description: "Biblioteca principal de contenido de RenPlay"
  - name: "users"
    description: "Operaciones sobre los usuarios de RenPlay (Los responses estan de diferente manera)"
  - name: "home"
    description: "Biblioteca principal de contenido de RenPlay"
  - name: "RelatedContent"
    description: "Contenido relacionado"
servers:
  - url: "https://api.renplay.com"
  - url: "https://api2.guiah.tv"
paths:


  /music/search:
    put:
      tags:
        - "music"
      summary: " Busqueda global de contenido (Documentado)"
      description: "Este endpoint está relacionado con la búsqueda en la biblioteca de música, permitiendo a los usuarios encontrar canciones y álbumes utilizando diversos criterios. (Fallando al momento de buscar podcast, audiobooks y al momento de buscar un track en especifico no lo muestra al inicio sino al final)"
      operationId: "searchMusic"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                DeviceID:
                  type: "string"
                  description: "Identificador único del dispositivo desde el que se realiza la búsqueda."
                  example: "cmMdk1g8E-ID40g0cqe8tiGb5AlGnlKLcPaVRKkrv2g"
                ProfileID:
                  type: "integer"
                  description: "Identificador del perfil de usuario que realiza la búsqueda."
                  example: 216
                Query:
                  type: "string"
                  description: "Término de búsqueda para encontrar música relacionada."
                  example: "Ruddy"
      responses:
        "200":
           description: "Contenido generado con éxito"
           content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Contenido generado con éxito"
                            Code: 0
        "201":
           description: "Contenido generado con éxito"
           content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "No se econtraron resultados."
                            Code: 1
                          - Msg: "No se econtraron resultados."
                            Code: 1
                          - Msg: "No se econtraron resultados para el artistaID: {postItem.MediaItem.ItemID}"
                            Code: 1
                          - Msg: "No se econtraron resultados para el artistaID: {postItem.MediaItem.ItemID}"
                            Code: 1    
        "204":
           description: "Error <1>: El tipo de contenido debe ser 'artist' // "
           content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error <1>: El tipo de contenido debe ser 'artist'"
                            Code: 4
                                               


  /music/album/{albumId}:
    put:
      tags:
        - "music"
      summary: "Actualizar la información del álbum (No cuenta con responses)"
      description: "Este endpoint muestra el álbum llamado por medio del id. "
      operationId: "updateAlbumInfo"
      parameters:
        - name: "albumId"
          in: "path"
          required: true
          schema:
            type: "integer"
            description: "El ID único del álbum que se va a actualizar."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                DeviceID:
                  type: "string"
                  example: "cmMdk1g8E-ID40g0cqe8tiGb5AlGnlKLcPaVRKkrv2g"
                ProfileID:
                  type: "integer"
                  example: 216
      responses:
        "200":
          description: ""
      
        "404":
          description: ""
  /music/artist/{artistId}:
    put:
      tags:
        - "music"
      summary: "Obtener información del artista (No cuenta con responses)"
      description: "Este endpoint muestra el artista identificado por medio del id. "
      operationId: "getArtistInfo"
      parameters:
        - name: "artistId"
          in: "path"
          required: true
          schema:
            type: "integer"
            description: "El ID único del artista que se está consultando."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                DeviceID:
                  type: "string"
                  example: "cmMdk1g8E-ID40g0cqe8tiGb5AlGnlKLcPaVRKkrv2g"
                ProfileID:
                  type: "integer"
                  example: 216
      responses:
        "200":
          description: "Información del artista obtenida con éxito."
        "404":
          description: "Artista no encontrado."
  /music/pl:
    post:
      tags:
        - "music"
      summary: "Crear una nueva playlist (Documentado)"
      description: "Este endpoint se utiliza para crear una nueva playlist en la biblioteca de música. Se requiere un cuerpo de solicitud con DeviceID, ProfileID y los detalles de la nueva playlist a crear."
      operationId: "createPlaylist"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                DeviceID:
                  type: "string"
                  example: "cmMdk1g8E-ID40g0cqe8tiGb5AlGnlKLcPaVRKkrv2g"
                ProfileID:
                  type: "integer"
                  example: 216
                MusicCollectionDTO:
                  type: "object"
                  properties:
                    Title:
                      type: "string"
                      example: "Prueba de PlayList en HomeLib"
                    Description:
                      type: "string"
                      example: "De todo un poco"
                    IsPublic:
                      type: "boolean"
                      example: false
      responses:
        '200':
          description: "Lista creada con éxito"
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Msg:
                        type: string
                        example: "Lista creada con éxito"
                      Code:
                        type: integer
                        example: 0
                  MusicCollectionDTO:
                    type: object
                    properties:
                      RegID:
                        type: integer
                        example: 0
                      Title:
                        type: string
                        example: "Prueba de PlayList."
                      Description:
                        type: string
                        example: "De todo un pocos"
                      Title_en:
                        type: string
                        nullable: true
                      Description_en:
                        type: string
                        nullable: true
                      IsPublic:
                        type: boolean
                        example: false
        "201":
            description: "2 en code 1 "
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error creando PlayList, DeviceID no encontrado"
                      Code: 1
                    - Msg: "Error creando PlayList, error en datos enviados o usuario con suscripcion no vigente"
                      Code: 1  
        "203":
            description: "Error creando PlayList, {ex.Message}"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error creando PlayList, {ex.Message}"
                      Code: 3
                                  
        "204":
            description: "Error creando PlayList // Error <5>: no se pudo escribir en la DB."
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error creando PlayList"
                      Code: 4
                    - Msg: "Error <5>: no se pudo escribir en la DB."
                      Code: 4  
                   
                
              
    put:
      tags:
        - "music"
      summary: "Editar una playlist existente (Documentado)"
      description: "Este endpoint se utiliza para actualizar una playlist existente en la biblioteca de música. Se requiere un cuerpo de solicitud con DeviceID, ProfileID y los detalles actualizados de la playlist."
      operationId: "updatePlaylist"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                DeviceID:
                  type: "string"
                  example: "cmMdk1g8E-ID40g0cqe8tiGb5AlGnlKLcPaVRKkrv2g"
                ProfileID:
                  type: "integer"
                  example: 216
                MusicCollectionDTO:
                  type: "object"
                  properties:
                    RegID:
                      type: "integer"
                      example: 2254
                    Title:
                      type: "string"
                      example: "Prueba de Edicion PlayList RenPlay"
                    Description:
                      type: "string"
                      example: "De todo un poco"
                    IsPublic:
                      type: "boolean"
                      example: true
      responses:
          '200':
            description: "Respuesta cuando hay un error al actualizar la PlayList"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    Response:
                      type: object
                      properties:
                        Msg:
                          type: string
                          example: "PlayList actualizda en DB registro: {registroId}"
                        Code:
                          type: integer
                          example: 1
                    MusicCollectionDTO:
                      type: object
                      properties:
                        RegID:
                          type: integer
                          example: 0
                        Title:
                          type: string
                          example: "Prueba de Edicion PlayList RenPlay"
                        Description:
                          type: string
                          example: "De todo un poco"
                        Title_en:
                          type: string
                          nullable: true
                        Description_en:
                          type: string
                          nullable: true
                        IsPublic:
                          type: boolean
                          example: true
          "201":
            description: "2 en code 1"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg:  "Error actualizando PlayList, DeviceID no encontrado"
                      Code: 1
                    - Msg:  "Error actualizando PlayList, error en datos enviados o usuario no vigente."
                      Code: 1  
          
          "203":
            description: "Error actualizando PlayList: {ex.Message}"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error actualizando PlayList: {ex.Message}"
                      Code: 3  
          "204":
            description: "Error actualizando PlayList en DB, no se cumplen los parametros ProfileID:{postMusicCollection.ProfileID} con PlayListID:{postMusicCollection.MCollection.RegID}"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error actualizando PlayList en DB, no se cumplen los parametros ProfileID:{postMusicCollection.ProfileID} con PlayListID:{postMusicCollection.MCollection.RegID}"
                      Code: 4
             
    delete:
      tags:
        - "music"
      summary: "Eliminar una playlist (Documentado)"
      description: "Este endpoint elimina una playlist específica de la biblioteca de música."
      operationId: "deletePlaylist"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                DeviceID:
                  type: "string"
                  example: "-C3M-VzZxiTrpuzNJkXV-DWaUF5_3VhoOGtEV3zQn0k"
                ProfileID:
                  type: "integer"
                  example: 63
                MusicCollectionDTO:
                  type: "object"
                  properties:
                    RegID:
                      type: "integer"
                      example: 2233
                    Title:
                      type: "string"
                    Description:
                      type: "string"
                    IsPublic:
                      type: "boolean"
      responses:
        '200':
            description: "PlayList eliminada con exito."
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg:  "PlayList eliminada con exito."
                      Code: 0
                    
        "201":
            description: "Error eliminando PlayList, DeviceID no encontrado"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg:  "Error eliminando PlayList, DeviceID no encontrado"
                      Code: 1
                   
          
        "203":
            description: "Error actualizando PlayList: {ex.Message}"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error eliminando PlayList:  + ex.Message "
                      Code: 3  
        "204":
            description: "2 en code 4"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error eliminando PlayList, usuario no vigente"
                      Code: 4
                    - Msg: "Error eliminando PlayList en DB, no se cumplen los parametros> playlistID: {postMusicCollection.MCollection.RegID}, profileID: {postMusicCollection.ProfileID}"
                      Code: 4
                    
       
  /music/pl/track:
    post:
      tags:
        - "music"
      summary: "Agregar track a PlayList (Documentado)"
      description: "Este endpoint agrega un track específico a una playlist existente en la biblioteca de música, utilizando el ID de la playlist y el ID del track."
      operationId: "addTrackToPlaylist"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                DeviceID:
                  type: "string"
                  example: "cmMdk1g8E-ID40g0cqe8tiGb5AlGnlKLcPaVRKkrv2g"
                ProfileID:
                  type: "integer"
                  example: 216
                CollectionTrackDTO:
                  type: "object"
                  properties:
                    PlayListID:
                      type: "integer"
                      example: 2268
                    TrackID:
                      type: "integer"
                      example: 197
      responses:
        '200':
          description: "Track agregado con éxito en la colección."
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Msg:
                        type: string
                        example: "Track agregado con éxito en la colección."
                      Code:
                        type: integer
                        example: 0
                  MusicCollectionDTO:
                    type: object
                    properties:
                      PlayListID:
                        type: integer
                        example: 2269
                      TrackID:
                        type: integer
                        example: 200
                      Orden:
                        type: integer
                        example: 0
        "201":
          description: "3 responses en code 1"
          content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error: Este TrackID: {postTrackCollection.ColTrackDTO.TrackID} no existe en la DB"
                            Code: 1
                          - Msg: "Error: DeviceID no encontrado o no tiene una sesión válida."
                            Code: 1  
                          - Msg: "Error: Información proporcionada no válida."
                            Code: 1
        "202":
          description: "Error: El track ya existe en la colección."
          content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error: El track ya existe en la colección."
                            Code: 2
        "203":
          description: "2 responses en code 3"
          content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error escribiendo en la DB: {ex.Message}"
                            Code: 3
                          - Msg: "Error: {e.Message}"
                            Code: 3 
        "204":
          description: "2 responses en code 4"
          content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error: No se pudo agregar el track en la colección."
                            Code: 4
                          - Msg: "Error: PlayList no válida para el usuario proporcionado."
                            Code: 4                       
                                              
    delete:
      tags:
        - "music"
      summary: "Eliminar track de una playlist (Documentado)"
      description: "Este endpoint elimina un track específico de una playlist en la biblioteca de música."
      operationId: "deleteTrackFromPlaylist"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                DeviceID:
                  type: "string"
                  example: "cmMdk1g8E-ID40g0cqe8tiGb5AlGnlKLcPaVRKkrv2g"
                ProfileID:
                  type: "integer"
                  example: 216
                CollectionTrackDTO:
                  type: "object"
                  properties:
                    PlayListID:
                      type: "integer"
                      example: 2268
                    TrackID:
                      type: "integer"
                      example: 197
      responses:
        '200':
          description: "Track eliminado con exito."
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Msg:
                        type: string
                        example: "Track eliminado con exito."
                      Code:
                        type: integer
                        example: 0
                  MusicCollectionDTO:
                    type: object
                    properties:
                      PlayListID:
                        type: integer
                        example: 2269
                      TrackID:
                        type: integer
                        example: 200
                      Orden:
                        type: integer
                        example: 0
        "201":
          description: "2 responses en code 1"
          content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error: Información proporcionada no válida. Este PlayList no corresponde al usuario."
                            Code: 1
                          - Msg: "Error eliminando Track, DeviceID no encontrado"
                            Code: 1
        "203":
          description: "Error eliminando Track:  + ex.Message"
          content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error eliminando Track:  + ex.Message"
                            Code: 3
        "204":
          description: "Error eliminando Track:  + ex.Message"
          content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error: Datos de PlayList no válidos."
                            Code: 4
                          - Msg: "Error eliminando Track, registro no encontrado en DB> track.PlayListID: {0}, track.TrackID: {1}, postTrackCollection.ColTrackDTO.PlayListID, postTrackCollection.ColTrackDTO.TrackID"
                            Code: 4  
                          

  /music/myplaylist:
    put:
      tags:
        - "music"
      summary: "Obtiene los PlayList de usuario por ProfileID (Falta comprobar las responses)"
      description: "Recupera las playlists asociadas con un ProfileID específico."
      operationId: "getUserPlaylistsByProfileID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                DeviceID:
                  type: "string"
                  description: "Identificador único del dispositivo."
                  example: "cmMdk1g8E-ID40g0cqe8tiGb5AlGnlKLcPaVRKkrv2g"
                ProfileID:
                  type: "integer"
                  description: "Identificador del perfil de usuario para el cual se recuperan las playlists."
                  example: 216
      responses:
        '200':
          description: "Respuesta cuando la sesión no es válida."
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Msg:
                        type: string
                        example: "Sesión no válida, favor de iniciar nueva sesión."
                      Code:
                        type: integer
                        example: 1
                  MusicCollectionDTO:
                    type: object
                    properties:
                      Title:
                        type: string
                        nullable: true
                      Title_en:
                        type: string
                        nullable: true
                      Description_en:
                        type: string
                        nullable: true
                      Description:
                        type: string
                        nullable: true
                      PortadaURL:
                        type: string
                        format: uri
                        nullable: true
                      ReleaseDate:
                        type: string
                        format: date-time
                        example: "0001-01-01T00:00:00"
                      PosterType:
                        type: string
                        nullable: true
                      ContentType:
                        type: string
                        nullable: true
                      ParentSection:
                        type: string
                        nullable: true
                      MusicCollectionID:
                        type: integer
                        example: 0
                      Orden:
                        type: integer
                        example: 0
                      TotalItems:
                        type: integer
                        example: 0
                      Length:
                        type: integer
                        example: 0
                      OwnerID:
                        type: integer
                        example: 0
                      IsPublic:
                        type: boolean
                        example: false
                      IsLiked:
                        type: boolean
                        example: false
                      IsInHomeLib:
                        type: boolean
                        example: false
                      IsEditable:
                        type: boolean
                        example: false


  /music/tracklink:
    put:
      tags:
        - "music"
      summary: "Actualizar o asociar enlace de track (Falta responses)"
      description: "Este endpoint actualiza o asocia un enlace a un track específico en la biblioteca de música, utilizando el ID del track y el tipo de contenido."
      operationId: "updateTrackLink"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                DeviceID:
                  type: "string"
                  example: "7R88UtJ6ZyqhLtzq2mS-KG0zJDXGaD9EH-GxoBWjZLM"
                ProfileID:
                  type: "integer"
                  example: 168
                ContentType:
                  type: "string"
                  example: "track"
                TrackID:
                  type: "integer"
                  example: 262
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
          
          
  #AudioBooks
  /music/audiobook/{id}:
      put:
        tags:
          - "audiobooks"
        summary: "Obtener detalles de un audiolibro (Consultar)"
        description: "Este endpoint recupera los detalles de un audiolibro específico utilizando su ID único."
        operationId: "getAudiobookDetails"
        parameters:
          - name: "id"
            in: "path"
            required: true
            schema:
              type: "integer"
              description: "El ID único del audiolibro que se está consultando."
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  DeviceID:
                    type: "string"
                    description: "Identificador único del dispositivo desde el que se realiza la solicitud."
                    example: "ptUzIvosug1X4l9xxjmVvX2MhTIRkCL1psEJDsthFw0"
                  ProfileID:
                    type: "integer"
                    description: "Identificador del perfil de usuario que realiza la solicitud."
                    example: 54
        responses:
          "200":
            description: "Detalles del audiolibro obtenidos con éxito."
          "400":
            description: "Solicitud inválida debido a datos faltantes o incorrectos."
          "404":
            description: "Audiolibro no encontrado."
            
  #Duda sobre este
  /music/feedback:
    put:
      tags:
        - "music"
      summary: "Enviar feedback sobre un elemento musical (Documentado)"
      description: "Permite a los usuarios enviar feedback sobre varios elementos musicales, como tracks, colecciones de música, álbumes, audiolibros, pistas de audiolibros, podcasts, pistas de podcasts y artistas."
      operationId: "sendFeedbackOnMusicElement"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                DeviceID:
                  type: "string"
                  example: "v9aK1dAIg2fqaapqLsiXSE9n9ngKkvIdwkbrW5-pgV0"
                ProfileID:
                  type: "integer"
                  example: 1
                IsLiked:
                  type: "boolean"
                  example: false
                TrackID:
                  type: "integer"
                  example: 21
                MusicCollectionID:
                  type: "integer"
                  example: 21
                AlbumID:
                  type: "integer"
                  example: 21
                AudiobookID:
                  type: "integer"
                  example: 21
                AudiobookTrackID:
                  type: "integer"
                  example: 21
                PodcastID:
                  type: "integer"
                  example: 21
                PodcastTrackID:
                  type: "integer"
                  example: 21
                ArtistID:
                  type: "integer"
                  example: 21
              oneOf:
                - required: ["TrackID"]
                - required: ["MusicCollectionID"]
                - required: ["AlbumID"]
                - required: ["AudiobookID"]
                - required: ["AudiobookTrackID"]
                - required: ["PodcastID"]
                - required: ["PodcastTrackID"]
                - required: ["ArtistID"]
      responses:
        "200":
          description: "Valor actualizado con éxito."
          content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Valor actualizado con éxito."
                            Code: 0
                          
        "201":
          description: "Error <1>: Usuario no encontrado, favor de revisar el SuscriberID."
          content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error <1>: Usuario no encontrado, favor de revisar el SuscriberID."
                            Code: 1  
        "204":
           description: "Error actualizando base de datos."
           content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error actualizando base de datos."
                            Code: 4
   #Duda sobre este.
  /music/podcast/{id}:
      put:
        tags:
          - "music"
        summary: "Obtener información de un podcast (No cuenta con responses en la funcion GetPodcastContent)"
        description: "Recupera la información sobre un podcast específico basado en su ID."
        operationId: "getPodcastInfo"
        parameters:
          - name: "id"
            in: "path"
            required: true
            description: "ID único del podcast a obtener."
            schema:
              type: "integer"
              example: 2
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  DeviceID:
                    type: "string"
                    example: "cmMdk1g8E-ID40g0cqe8tiGb5AlGnlKLcPaVRKkrv2g"
                  ProfileID:
                    type: "integer"
                    example: 216
        responses:
          "200":
            description: ""
          "400":
            description: ""
#Suscription
            
  /subscription/status:
      put:
        tags:
          - "subscription"
        summary: "Consultar el estado de la suscripción"
        description: "Este endpoint permite consultar el estado actual de la suscripción de un usuario, identificado por el DeviceID proporcionado en el cuerpo de la solicitud."
        operationId: "getSubscriptionStatus"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  DeviceID:
                    type: "string"
                    description: "Identificador único del dispositivo desde el que se realiza la solicitud."
                    example: "Wf7cvGxkxsi7adNdnHw4IweiFBD1oQpuA8gjTavhlc"
        responses:
          "200":
            description: ""
          "400":
            description: ""
          "401":
            description: ""
          "404":
            description: ""
  /subscription/packs:
      put:
        tags:
          - "subscription"
        summary: "Consultar paquetes de suscripción disponibles"
        description: "Este endpoint permite a los usuarios consultar los paquetes de suscripción disponibles, identificados por el SuscriberID proporcionado en el cuerpo de la solicitud."
        operationId: "getSubscriptionPackages"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  SuscriberID:
                    type: "string"
                    description: "Identificador único del suscriptor que realiza la consulta."
                    example: "FbYDCn3Qr0uWq6ZferRxWTgspxzmEJfPHTUBfn8OJFE"
        responses:
          "200":
            description: "Consulta de paquetes de suscripción realizada con éxito."
          "400":
            description: "Solicitud inválida debido a datos faltantes o incorrectos."
          "401":
            description: "No autorizado. Se requiere autenticación para acceder a este recurso."
          "404":
            description: "Suscriptor no encontrado."
  /subscription/demo:
      put:
        tags:
          - "subscription"
        summary: "Obtener una demostración de la suscripción"
        description: "Este endpoint proporciona acceso a una demostración de los servicios de suscripción disponibles, utilizando el ID del suscriptor proporcionado en el cuerpo de la solicitud."
        operationId: "getSubscriptionDemo"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  SuscriberID:
                    type: "string"
                    description: "Identificador único del suscriptor que solicita la demostración."
                    example: "h3lZVO-mkP2NfTq5p8LObLzhPg0CMp9rdQwqFVpk0TA="
        responses:
          "200":
            description: ""
          "400":
            description: ""
          "401":
            description: ""
          "404":
            description: ""
  /subscription/valcup:
      put:  
        tags:
          - "subscription"
        summary: "Validar un cupón de promoción"
        description: "Este endpoint permite a los usuarios validar un cupón de promoción proporcionando un código de promoción y el ID de registro de suscriptor."
        operationId: "validatePromoCode"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  PromoCode:
                    type: "string"
                    description: "Código del cupón de promoción a validar."
                    example: "PromoTest2023OK"
                  SubRegID:
                    type: "integer"
                    description: "Identificador de registro del suscriptor."
                    example: 10
        responses:
          "200":
            description: ""
          "400":
            description: ""
          "401":
            description: ""
          "404":
            description: ""
  /subscription/subscribe:
      put:
        tags:
          - "subscription"
        summary: "Agregar suscripción a un usuario"
        description: "Este endpoint permite agregar una suscripción a un usuario proporcionando los detalles del suscriptor, la información de la suscripción y los datos de la tarjeta de pago."
        operationId: "addSubscriptionToUser"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  SuscriberID:
                    type: "string"
                    description: "Identificador único del suscriptor."
                    example: "RY04h49NYHaeaygGdK1bNnfQ8om0TAMVrG8CRpxw40E"
                  SubscriptionInfo:
                    type: "object"
                    properties:
                      SubID:
                        type: "integer"
                        description: "Identificador de la suscripción."
                        example: 11
                      AmountDebt:
                        type: "integer"
                        description: "Monto de deuda de la suscripción."
                        example: 129
                      DiscountCode:
                        type: "string"
                        description: "Código de descuento aplicado a la suscripción."
                        nullable: true
                  PaymentCard:
                    type: "object"
                    properties:
                      card_number:
                        type: "string"
                        description: "Número de la tarjeta de pago."
                        example: "5103326184884934"
                      holder_name:
                        type: "string"
                        description: "Nombre del titular de la tarjeta."
                        example: "Sary Cazares"
                      expiration_year:
                        type: "string"
                        description: "Año de vencimiento de la tarjeta."
                        example: "24"
                      expiration_month:
                        type: "string"
                        description: "Mes de vencimiento de la tarjeta."
                        example: "08"
                      cvv2:
                        type: "string"
                        description: "Código de seguridad de la tarjeta (CVV2)."
                        example: "123"
        responses:
          "200":
            description: ""
          "400":
            description: ""
            
#home

  /music/spotlight/home:
      put:
        tags:
          - "home"
        summary: "Obtener contenidos destacados de música para la página principal"
        description: "Este endpoint, parte de la biblioteca principal de RenPlay (`homeLib`), recupera los contenidos destacados de música para la página principal, basándose en el ID del dispositivo y el perfil del usuario."
        operationId: "getMusicSpotlightForHome"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  DeviceID:
                    type: "string"
                    description: "Identificador único del dispositivo desde el que se realiza la solicitud."
                    example: "ObUdavVpzk32y8o-Y0KLPMZUDVz8WCTtIsUHdrX1ehE"
                  ProfileID:
                    type: "integer"
                    description: "Identificador del perfil de usuario que realiza la solicitud. Un valor de 0 puede indicar una solicitud no autenticada o para un perfil por defecto."
                    example: 0
        responses:
          "200":
            description: ""
          "400":
            description: ""
          "401":
            description: ""
          "404":
            description: ""

  /music/section/home:
    put:
      tags:
        - "home"  # o "music" dependiendo de cómo estés organizando tus tags
      summary: "Obtener la sección principal de música"
      description: "Este endpoint recupera información destacada para la sección principal de música, basándose en el ID del dispositivo y el perfil del usuario."
      operationId: "getMusicHomeSection"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                DeviceID:
                  type: "string"
                  description: "Identificador único del dispositivo desde el que se realiza la solicitud."
                  example: "cmMdk1g8E-ID40g0cqe8tiGb5AlGnlKLcPaVRKkrv2g"
                ProfileID:
                  type: "integer"
                  description: "Identificador del perfil de usuario que realiza la solicitud."
                  example: 216
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
   #Users
  /usr/login:
      post:
        tags:
          - "users"
        summary: "Login de usuario"
        description: "Permite a los usuarios iniciar sesión proporcionando credenciales de email y contraseña, junto con información del dispositivo."
        operationId: "userLogin"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Email:
                    type: "string"
                    format: "email"
                    description: "Email del usuario."
                    example: "copito_ibarra@hotmail.com"
                  Password:
                    type: "string"
                    description: "Contraseña del usuario en formato codificado."
                    example: "JDJhJDEwJGRsdzBEbXVMTzhDYS52amVuUXp2Nk8zNFQ0TTE5cUdtN0VFaU9hQ0xYd2Z3N3BueHd1LmVP"
                  DeviceType:
                    type: "string"
                    description: "Tipo de dispositivo desde el cual se realiza la solicitud."
                    example: "opera 104.0.0 Windows 10"
                  DevicePlatform:
                    type: "string"
                    description: "Plataforma del dispositivo."
                    example: "Web"
                  DeviceVersion:
                    type: "string"
                    description: "Versión del dispositivo."
                    example: "0.1.0"
                  DeviceUUID:
                    type: "string"
                    description: "UUID único del dispositivo."
                    example: "c9fc00ff7588c51a7753a6c56bea344d"
        responses:
          "200":
            description: ""
          "400":
            description: ""
          "401":
            description: ""
  /usr/create:
      post:
        tags:
          - "users"
        summary: "User Create (No se encuentra funcionando)"
        description: "Crea un nuevo usuario en el sistema con la información proporcionada."
        operationId: "userCreate"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  UserName:
                    type: "string"
                    description: "Nombre de usuario."
                    example: "Miles"
                  Name:
                    type: "string"
                    description: "Nombre completo del usuario."
                    example: "Bryan Nava"
                  Email:
                    type: "string"
                    format: "email"
                    description: "Email del usuario."
                    example: "milestom22@hotmail.com"
                  Phone:
                    type: "string"
                    description: "Número de teléfono del usuario."
                    example: "528126613666"
                  MasterPin:
                    type: "integer"
                    format: "int32"
                    description: "PIN maestro del usuario."
                    example: 1234
                  Password:
                    type: "string"
                    description: "Contraseña del usuario."
                    example: "A/OBs2V6ao/YePd9E83gCw=="
        responses:
          "200":
            description: ""
          "400":
            description: ""
          "409":
            description: ""
  /usr/validate/email:
    get:
      tags:
        - "users"
      summary: "Validar Correo Electrónico del Usuario"
      description: "Valida si el correo electrónico proporcionado está registrado en el sistema."
      operationId: "validateEmail"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Email:
                  type: string
                  format: "email"
                  example: "donpec@icloud.com"
        required: true
      responses:
        '200':
          description: "El correo electrónico es válido y está registrado."
          content:
            application/json:
              schema:
                type: object
                properties:
                  ResponseMsg:
                    type: string
                    example: "Correo enviado con éxito."
                  ResponseCode:
                    type: integer
                    example: 0
                  SuscriberID:
                    
                    example: "null"

  /usr/verify/email:
    post:
      tags:
        - "users"
      summary: "User Verify Email"
      description: "Verifica el correo electrónico del usuario utilizando un código de verificación enviado previamente."
      operationId: "verifyEmail"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                Email:
                  type: "string"
                  format: "email"
                  description: "Correo electrónico del usuario a verificar."
                  example: "mpadilla@lap55.com"
                CodeVerification:
                  type: "string"
                  description: "Código de verificación enviado al correo electrónico del usuario."
                  example: "8527"
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "401":
          description: ""





  /usr/validate/phone:
    post:
      tags:
        - "users"
      summary: "User Validate Phone (se debe usar la api2 de guia)"
      description: "Valida un número de teléfono en el sistema, posiblemente enviando un código de verificación mediante el método especificado."
      operationId: "validatePhone"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                Phone:
                  type: "string"
                  description: "Número de teléfono que se necesita validar."
                  example: "528110030854"
                PhoneVerificationMethod:
                  type: "integer"
                  format: "int32"
                  description: "Método de verificación de teléfono elegido. Por ejemplo, 1 podría representar SMS, 2 llamadas, etc."
                  example: 1
      responses:
        "200":
          description: "El número de teléfono es válido y se ha enviado el código de verificación."
        "400":
          description: ""

  /usr/verify/phone:
    post:
      tags:
        - "users"
      summary: "User Verify Phone"
      description: "Verifica el número de teléfono del usuario utilizando un código de verificación enviado previamente."
      operationId: "verifyPhone"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                Phone:
                  type: "string"
                  description: "Número de teléfono del usuario a verificar."
                  example: "528115557980"
                CodeVerification:
                  type: "string"
                  description: "Código de verificación enviado al número de teléfono del usuario."
                  example: "2870"
      responses:
        "200":
          description: ""
        "400":
          description: ""

  /usr/update/name:
    post:
      tags:
        - "users"
      summary: "Actualizar Nombre de Usuario"
      description: "Permite a los usuarios actualizar su nombre en el perfil."
      operationId: "updateUserName"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                SuscriberID:
                  type: "string"
                  description: "Identificador único del suscriptor cuyo nombre se desea actualizar."
                  example: "lYLUNRZ7dDCfaONqdkvB_KcfkdKku53Vhp8tOYwrriA"
                Name:
                  type: "string"
                  description: "Nuevo nombre para el usuario."
                  example: "Sary Cazarez"
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
  /usr/update/masterpin:
    post:
      tags:
        - "users"
      summary: "Actualizar MasterPin del usuario"
      description: "Permite al usuario actualizar su MasterPin."
      operationId: "updateUserMasterPin"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                SuscriberID:
                  type: "string"
                  description: "Identificador único del suscriptor."
                  example: "lYLUNRZ7dDCfaONqdkvB_KcfkdKku53Vhp8tOYwrriA"
                MasterPin:
                  type: "string"
                  description: "Nuevo MasterPin del usuario."
                  example: "0212"
      responses:
        "200":
          description: ""
        "400":
          description: ""
       
  /usr/update/pass:
    post:
      tags:
        - "users"
      summary: "Actualizar contraseña del usuario"
      description: "Permite al usuario actualizar su contraseña."
      operationId: "updateUserPassword"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                SuscriberID:
                  type: "string"
                  description: "Identificador único del suscriptor."
                  example: "lYLUNRZ7dDCfaONqdkvB_KcfkdKku53Vhp8tOYwrriA"
                Password:
                  type: "string"
                  description: "Nueva contraseña del usuario en formato codificado."
                  example: "A/OBs2V6ao/YePd9E83gCw=="
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "429":
          description: ""
  /usr/update/email:
    post:
      tags:
        - "users"
      summary: "Actualizar correo electrónico del usuario"
      description: "Permite al usuario actualizar su dirección de correo electrónico."
      operationId: "updateUserEmail"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                SuscriberID:
                  type: "string"
                  description: "Identificador único del suscriptor."
                  example: "lYLUNRZ7dDCfaONqdkvB_KcfkdKku53Vhp8tOYwrriA="
                Email:
                  type: "string"
                  format: "email"
                  description: "Nueva dirección de correo electrónico del usuario."
                  example: "donpec@me.com"
      responses:
        "200":
          description: ""
        "400":
          description: ""
      
  /usr/reset/pass:
    post:
      tags:
        - "users"
      summary: "Reiniciar contraseña del usuario"
      description: "Permite a los usuarios reiniciar su contraseña utilizando un método de verificación telefónica."
      operationId: "resetUserPassword"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                Email:
                  type: "string"
                  format: "email"
                  description: "Correo electrónico del usuario para el cual se solicita el reinicio de contraseña."
                  example: "mpadilla@lap55.com"
                PhoneVerificationMethod:
                  type: "integer"
                  format: "int32"
                  description: "Método de verificación telefónica seleccionado para el reinicio de contraseña."
                  example: 0
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "401":
          description: ""
        "404":
          description: ""
        "429":
          description: ""
  /usr/update/phone:
    post:
      tags:
        - "users"
      summary: "Actualizar número de teléfono del usuario"
      description: "Permite al usuario actualizar su número de teléfono utilizando un método de verificación telefónica."
      operationId: "updateUserPhone"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                SuscriberID:
                  type: "string"
                  description: "Identificador único del suscriptor."
                  example: "Xqb17-cj7huwqJKUqdVqoEECifdh_ae1-t1LnZyqkPI="
                Phone:
                  type: "string"
                  description: "Nuevo número de teléfono del usuario."
                  example: "528115557980"
                PhoneVerificationMethod:
                  type: "integer"
                  format: "int32"
                  description: "Método de verificación telefónica seleccionado para la actualización del número de teléfono."
                  example: 0
      responses:
        "200":
          description: ""
        "400":
          description: ""
      
  /usr/update/user:
    post:
      tags:
        - "users"
      summary: "Actualizar nombre de usuario"
      description: "Permite al usuario actualizar su nombre de usuario."
      operationId: "updateUsername"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                SuscriberID:
                  type: "string"
                  description: "Identificador único del suscriptor."
                  example: "lYLUNRZ7dDCfaONqdkvB_KcfkdKku53Vhp8tOYwrriA"
                UserName:
                  type: "string"
                  description: "Nuevo nombre de usuario."
                  example: "SaryMyster"
      responses:
        "200":
          description: ""
        "400":
          description: ""
   
  /usr/delete:
    post:
      tags:
        - "users"
      summary: "Eliminar usuario"
      description: "Permite eliminar un usuario del sistema utilizando su identificador de registro y el identificador del suscriptor."
      operationId: "deleteUser"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                UserReg:
                  type: "integer"
                  format: "int64"
                  description: "Identificador de registro del usuario a eliminar."
                  example: 18162
                SuscriberID:
                  type: "string"
                  description: "Identificador único del suscriptor asociado al usuario."
                  example: "5eBlRQCL9xR7Ev-cYy1KmJJmQ22G8CZXGW7ibqNKMTc"
      responses:
        "200":
          description: ""
        "400":
          description: ""

  /usr/info:
    put:
      tags:
        - "users"
      summary: "Obtener información del usuario"
      description: "Permite obtener la información detallada del usuario basada en su SuscriberID."
      operationId: "getUserInfo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                SuscriberID:
                  type: "string"
                  description: "Identificador único del suscriptor para el cual se solicita la información."
                  example: "Xqb17-cj7huwqJKUqdVqoEECifdh_ae1-t1LnZyqkPI="
      responses:
        "200":
          description: ""
        "400":
          description: ""
        
  /usr/validation:
    post:
      tags:
        - "users"
      summary: "Validación de usuario"
      description: "Permite validar la cuenta de un usuario mediante un código de verificación enviado a su correo electrónico."
      operationId: "validateUser"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                Email:
                  type: "string"
                  format: "email"
                  description: "Correo electrónico del usuario a validar."
                  example: "mpadilla@lap55.com"
                CodeVerification:
                  type: "string"
                  description: "Código de verificación enviado al correo electrónico del usuario."
                  example: "4230"
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /usr/profiles:
    put:
      tags:
        - "users"
      summary: "Lista de Perfiles"
      description: "Obtiene la lista de perfiles asociados al SuscriberID proporcionado."
      operationId: "listUserProfiles"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                SuscriberID:
                  type: "string"
                  description: "Identificador único del suscriptor para el cual se solicita la lista de perfiles."
                  example: "27blcujcwu8FJpsD2wQeuY0EthZD85_8Lqgn0XUXI9A"
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /usr/profile:
    post:
      tags:
        - "users"
      summary: "Agregar un perfil al usuario"
      description: "Crea un nuevo perfil de usuario bajo el SuscriberID dado."
      operationId: "addUserProfile"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                SuscriberID:
                  type: "string"
                  description: "Identificador único del suscriptor."
                  example: "Xqb17-cj7huwqJKUqdVqoEECifdh_ae1-t1LnZyqkPI="
                UserProfile:
                  type: "object"
                  properties:
                    Name:
                      type: "string"
                      description: "Nombre del perfil."
                      example: "Pec"
                    ImageID:
                      type: "integer"
                      description: "Identificador de la imagen del perfil."
                      example: 1
                    NumericPin:
                      type: "string"
                      description: "PIN numérico para el perfil."
                      example: "2002"
                    IsAKid:
                      type: "boolean"
                      description: "Indica si el perfil es de un niño."
                      example: false
      responses:
        "200":
          description: ""
        "400":
          description: ""

    delete:
      tags:
        - "users"
      summary: "Eliminar perfil de usuario"
      description: "Elimina un perfil de usuario basado en el SuscriberID y ProfileRegID dados."
      operationId: "deleteUserProfile"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                SuscriberID:
                  type: "string"
                  description: "Identificador único del suscriptor."
                  example: "Xqb17-cj7huwqJKUqdVqoEECifdh_ae1-t1LnZyqkPI="
                ProfileRegID:
                  type: "integer"
                  format: "int32"
                  description: "Identificador del registro del perfil a eliminar."
                  example: 43
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /usr/profiles/imgs:
    put:
      tags:
        - "users"
      summary: "Imágenes para Perfiles"
      description: "Obtiene una lista de imágenes disponibles para los perfiles del usuario."
      operationId: "getProfileImages"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                SuscriberID:
                  type: "string"
                  description: "Identificador único del suscriptor para el cual se solicitan las imágenes."
                  example: "Xqb17-cj7huwqJKUqdVqoEECifdh_ae1-t1LnZyqkPI="
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /usr/devices:
    put:
      tags:
        - "users"
      summary: "Lista de dispositivos de usuario"
      description: "Obtiene la lista de dispositivos asociados al SuscriberID proporcionado."
      operationId: "listUserDevices"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                SuscriberID:
                  type: "string"
                  description: "Identificador único del suscriptor cuya lista de dispositivos se solicita."
                  example: "Xqb17-cj7huwqJKUqdVqoEECifdh_ae1-t1LnZyqkPI="
      responses:
        "200":
          description: ""
        "400":
          description: ""

  /usr/device:
    delete:
      tags:
        - "users"
      summary: "Elimina un dispositivo"
      description: "Elimina un dispositivo asociado al SuscriberID y SubscriberDeviceID proporcionados."
      operationId: "deleteUserDevice"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                SuscriberID:
                  type: "string"
                  description: "Identificador único del suscriptor asociado al dispositivo."
                  example: "Xqb17-cj7huwqJKUqdVqoEECifdh_ae1-t1LnZyqkPI="
                SubscriberDeviceID:
                  type: "string"
                  description: "Identificador único del dispositivo a eliminar."
                  example: "XXReCc22JxHAdjZEYS9dewV_OemgCTwRJ9hauuHXh3I"
      responses:
        "200":
          description: ""
        "400":
          description: ""
  #Falla por cantidad de lineas en respuesta
  /creators/list/artist:
    put:
      tags:
        - "creators"
      summary: "Obtener la lista de artistas (Documentado)"
      description: "Devuelve una lista de artistas asociados con el creador especificado por el CreatorID."
      operationId: "listArtistsByCreator"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
      responses:
        '200':
          description: "Operación exitosa, se encontraron registros en la base de datos."
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Msg:
                        type: string
                        example: "Se encontraron 2 registros en la DB."
                      Code:
                        type: integer
                        example: 0
                  Artists:
                    type: array
                    items:
                      type: object
                      properties:
                        Title:
                          type: string
                          example: "Marcelas Gandaraa"
                        Description:
                          type: string
                          example: "Marcela Gándara es una cantante y compositora mexicana de música cristiana. Hasta la actualidad, ha producido seis álbumes, entre los cuales se encuentran, Más que un anhelo, ¡Digno es el Señor!, Marcela Gándara en vivo desde Panamá, El mismo cielo, Live y Cerca estás."
                        PortadaURL:
                          type: string
                          format: uri
                          example: "https://i.scdn.co/image/ab6761670000ecd41289c047f12ab28f2e713e54"
                        Active:
                          type: boolean
                          example: true
                        OwnerID:
                          type: integer
                          example: 0
                        ArtistID:
                          type: integer
                          example: 582
        "201":
          description: "No existen registros en la DB."
          content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "No existen registros en la DB."
                            Code: 1
                          - Msg: "Error en CreatorID no coincide"
                            Code: 1  
          
        "203":
           description: "Error {e.Message}"
           content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error {e.Message}"
                            Code: 3
          
   ####
  /creators/artist:
    post:
        tags:
          - "creators"
        summary: "Crear un nuevo artista (Documentado)"
        description: "Permite a los creadores añadir un nuevo artista a su lista con la información proporcionada."
        operationId: "createArtist"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  CreatorID:
                    type: "string"
                    example: "UmVuUGxheTIwMjMk"
                  Artist:
                    type: "object"
                    properties:
                      Title:
                        type: "string"
                        example: "Marcelas Gandara"
                      Description:
                        type: "string"
                        example: "Marcela Gándara es una cantante y compositora mexicana de música cristiana..."
                      PortadaURL:
                        type: "string"
                        format: "uri"
                        example: "https://i.scdn.co/image/ab6761670000ecd41289c047f12ab28f2e713e54"
                      Active:
                        type: "boolean"
                        example: true
        responses:
          '200':
            description: "Artista creado con éxito"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    Response:
                      type: object
                      properties:
                        Msg:
                          type: string
                          example: "Artista creado con éxito"
                        Code:
                          type: integer
                          example: 0
                    Artist:
                      type: object
                      properties:
                        Title:
                          type: string
                          example: "Marcelas Gandara."
                        Description:
                          type: string
                          example: "Marcela Gándara es una cantante y compositora mexicana de música cristiana..."
                        PortadaURL:
                          type: string
                          format: uri
                          example: "https://i.scdn.co/image/ab6761670000ecd41289c047f12ab28f2e713e54"
                        Active:
                          type: boolean
                          example: false
                        OwnerID:
                          type: integer
                          example: 0
                        ArtistID:
                          type: integer
                          example: 587
          "201":
                description: "Error creando Artista, CreatorID no coincide"
                content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error creando Artista, CreatorID no coincide"
                            Code: 1
                          
          "202":
                description: "Error <2>: El título del artista ya existe en la DB."
                content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error <2>: El título del artista ya existe en la DB."
                            Code: 2
          "203":
                description: "Error creando Artista, {ex.Message}"
                content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error creando Artista, {ex.Message}"
                            Code: 3                    
          "204":
              description: "Error <1> // Error <3> // Error <4> // Error <5> // Error <6> "
              content:
                  application/json:
                    schema:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                      example:
                        - Msg: "Error <1>: No se pudo guardar en la DB."
                          Code: 4
                        - Msg: "Error <3>: Error en la portada del artista."
                          Code: 4
                        - Msg: "Error <4>: Error en el título del artista."
                          Code: 4
                        - Msg: "Error <5>: Error en la descripción del artista."
                          Code: 4  
                        
    put:
      tags:
        - "creators"
      summary: "Editar información de un artista (Documentado)"
      description: "Actualiza la información de un artista basado en el CreatorID y los detalles provistos."
      operationId: "editArtistInfo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Artist:
                  type: "object"
                  properties:
                    Title:
                      type: "string"
                      example: "Armando Sanchez"
                    Description:
                      type: "string"
                      example: "Cantautor con una pasión extrema por compartir el mensaje de Jesús a través de la música y la palabra de Dios..."
                    PortadaURL:
                      type: "string"
                      format: "uri"
                      example: "https://mtracks.azureedge.net/public/images/artists/cover/512/915.jpg"
                    ArtistID:
                      type: "integer"
                      example: 24
                    Active:
                      type: "boolean"
                      example: true
      responses:
        '200':
          description: "Operación exitosa, el artista ha sido editado correctamente."
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Msg:
                        type: string
                        example: "Artista editado con éxito"
                      Code:
                        type: integer
                        example: 0
                  Artist:
                    type: object
                    properties:
                      Title:
                        type: string
                        example: "Armando Sanchez"
                      Description:
                        type: string
                        example: "Cantautor con una pasión extrema por compartir el mensaje de Jesús a través de la música y la palabra de Dios..."
                      PortadaURL:
                        type: string
                        format: uri
                        example: "https://mtracks.azureedge.net/public/images/artists/cover/512/915.jpg"
                      Active:
                        type: boolean
                        example: true
                      OwnerID:
                        type: integer
                        example: 0
                      ArtistID:
                        type: integer
                        example: 24
        "201":
                description: "2 Respuestas en code 1"
                content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error editando Artista, El ArtistID no existe en la DB."
                            Code: 1
                          - Msg: "Error editando Artista, CreatorID no coincide"
                            Code: 1   
        "202":
                description: "Error <2>: El título del artista ya existe en la DB."
                content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error <2>: El título del artista ya existe en la DB."
                            Code: 2
        "203":
                description: "Error editando Artista, {ex.Message}"
                content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error editando Artista, {ex.Message}"
                            Code: 3                    
        "204":
              description: "Error <1> // Error <3> // Error <4> // Error <5> // Error <6> "
              content:
                  application/json:
                    schema:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                      example:
                        - Msg: "Error <1>: No se pudo editar el Artista en la DB."
                          Code: 4
                        - Msg: "Error <3>: Error en la portada del artista."
                          Code: 4
                        - Msg: "Error <4>: Error en el título del artista."
                          Code: 4
                        - Msg: "Error <5>: Error en la descripción del artista."
                          Code: 4  
                        - Msg: "Error <6>: El RegID del artista a editar es nulo."
                          Code: 4

    
    delete:
          tags:
            - "creators"
          summary: "Eliminar un artista (Documentado)"
          description: "Elimina un artista específico asociado con el creador especificado por el CreatorID."
          operationId: "deleteArtist"
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: "object"
                  properties:
                    CreatorID:
                      type: "string"
                      example: "UmVuUGxheTIwMjMk"
                    Artist:
                      type: "object"
                      properties:
                        ArtistID:
                          type: "integer"
                          example: 29
          responses:
            '200':
              description: "ItemID: 28 eliminado con éxito"
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      Response:
                        type: object
                        properties:
                          Msg:
                            type: string
                            example: "ItemID: 28 eliminado con éxito"
                          Code:
                            type: integer
                            example: 0
                      Artist:
                        type: object
                        properties:
                          Title:
                            type: string
                            nullable: true
                          Description:
                            type: string
                            nullable: true
                          PortadaURL:
                            type: string
                            format: uri
                            nullable: true
                          Active:
                            type: boolean
                            example: false
                          OwnerID:
                            type: integer
                            example: 0
                             
            "203":
                description: "Error <3> desconocido: {e.Message}"
                content:
                    application/json:
                      schema:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                        example:
                          - Msg: "Error <3> desconocido: {e.Message}"
                            Code: 3
            "204":
              description: "Error <1> // Error <2> // Error <6> "
              content:
                  application/json:
                    schema:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                      example:
                        - Msg: "Error <1> eliminando registro en DB, itemID: {crudArtist.Artist.RegID}"
                          Code: 4
                        - Msg: "Error <2> registro no encontrado para el itemID: {crudArtist.Artist.RegID}"
                          Code: 4
                        - Msg: "Error <6>: El RegID del item a eliminar es nulo."
                          Code: 4
                        
          ####################
  /creators/album:
    post:
      tags:
        - "creators"
      summary: "Crear un nuevo álbum (Documentado)"
      description: "Permite a los creadores añadir un nuevo álbum a su catálogo con la información proporcionada."
      operationId: "createAlbum"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Album:
                  type: "object"
                  properties:
                    Title:
                      type: "string"
                      example: "Mi Refugio"
                    Description:
                      type: "string"
                    Length:
                      type: "integer"
                      example: 3281
                    PortadaURL:
                      type: "string"
                      format: "uri"
                      example: "https://i.scdn.co/image/ab67616d00001e027d3622529b03dab74f93e2d9"
                    ReleaseDate:
                      type: "string"
                      format: "date-time"
                      example: "2012-08-09T00:00:00"
                    TotalItems:
                      type: "integer"
                      example: 13
                    Artists:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          ArtistID:
                            type: "integer"
                    Active:
                      type: "boolean"
                      example: true
      responses:
        '200':
          description: "Item creado con éxito"
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Msg:
                        type: string
                        example: "Item creado con éxito"
                      Code:
                        type: integer
                        example: 0
                  Album:
                    type: object
                    properties:
                      Title:
                        type: string
                        example: "Mi Refugio.."
                      Description:
                        type: string
                        example: "string"
                      Length:
                        type: integer
                        example: 3281
                      PortadaURL:
                        type: string
                        format: uri
                        example: "https://i.scdn.co/image/ab67616d00001e027d3622529b03dab74f93e2d9"
                      ReleaseDate:
                        type: string
                        format: date-time
                        example: "2012-08-09T00:00:00"
                      TotalItems:
                        type: integer
                        example: 13
                      Active:
                        type: boolean
                        example: false
                      Artists:
                        type: array
                        items:
                          type: object
                          properties:
                            ArtistID:
                              type: integer
                              example: 0
                      AlbumID:
                        type: integer
                        example: 109
                      OwnerID:
                        type: integer
                        example: 0
        "201":
            description: "Error creando Item, {ex.Message}"
            content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Msg:
                          type: "string"
                        Code:
                          type: "integer"
                    example:
                      - Msg: "Error creando Item, CreatorID no coincide"
                        Code: 1
        "202":
            description: "Error <2>: El título ya existe en la DB."
            content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Msg:
                          type: "string"
                        Code:
                          type: "integer"
                    example:
                      - Msg: "Error <2>: El título ya existe en la DB."
                        Code: 2                
        "203":
            description: "Error creando Item, {ex.Message}"
            content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Msg:
                          type: "string"
                        Code:
                          type: "integer"
                    example:
                      - Msg: "Error creando Item, {ex.Message}"
                        Code: 3
        "204":
          description: "Error <1> // al // Error <9> "
          content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <1>: No se pudo guardar en la DB."
                      Code: 4
                    - Msg: "Error <2> registro no encontrado para el itemID: {crudItem.Item.RegID}"
                      Code: 4
                    - Msg: "Error <3>: Error en la portada."
                      Code: 4
                    - Msg: "Error <4>: Error en el título."
                      Code: 4
                    - Msg: "Error <5>: Error en la descripción."
                      Code: 4
                    - Msg: "Error <6>: Error en la duración del Album."
                      Code: 4 
                    - Msg: "Error <7>: Error en la fecha de lanzamiento."
                      Code: 4  
                    - Msg: "Error <8>: Error en el campo TotalItems."
                      Code: 4     
                    - Msg: "Error <9>: No se pudo guardar en la DB, creando la relacion Album/Artista."
                      Code: 4
    put:
      tags:
        - "creators"
      summary: "Editar información de un álbum (Documentado)"
      description: "Actualiza la información de un álbum existente basado en el CreatorID y los detalles proporcionados en el cuerpo de la solicitud."
      operationId: "editAlbum"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Album:
                  type: "object"
                  properties:
                    
                    Title:
                      type: "string"
                      example: "Mi Refugio"
                    Description:
                      type: "string"
                    Length:
                      type: "integer"
                      example: 3281
                    PortadaURL:
                      type: "string"
                      format: "uri"
                      example: "https://i.scdn.co/image/ab67616d00001e027d3622529b03dab74f93e2d9"
                    ReleaseDate:
                      type: "string"
                      format: "date-time"
                      example: "2012-08-09T00:00:00"
                    TotalItems:
                      type: "integer"
                      example: 13
                    Artists:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          ArtistID:
                            type: "integer"
                    Active:
                      type: "boolean"
                      example: true
      responses:
        '200':
          description: "Item editado con éxito"
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Msg:
                        type: string
                        example: "Item editado con éxito"
                      Code:
                        type: integer
                        example: 0
                  Album:
                    type: object
                    properties:
                      Title:
                        type: string
                        example: "Mi Refugio"
                      Description:
                        type: string
                        example: "string"
                      Length:
                        type: integer
                        example: 3281
                      PortadaURL:
                        type: string
                        format: uri
                        example: "https://i.scdn.co/image/ab67616d00001e027d3622529b03dab74f93e2d9"
                      ReleaseDate:
                        type: string
                        format: date-time
                        example: "2012-08-09T00:00:00"
                      TotalItems:
                        type: integer
                        example: 13
                      Active:
                        type: boolean
                        example: true
                      Artists:
                        type: array
                        items:
                          type: object
                          properties:
                            ArtistID:
                              type: integer
                              example: 0
                      AlbumID:
                        type: integer
                        example: 9
                      OwnerID:
                        type: integer
                        example: 0
        "201":
          description: "2 respuestas en code 1"
          content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <11> editando Item, RegID no encontrado en la DB"
                      Code: 2
                    - Msg: "Error <12> editando Item, CreatorID no coincide"
                      Code: 2   
        "202":
          description: "Error <2>: El título ya existe en la DB."
          content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <2>: El título ya existe en la DB."
                      Code: 2  
        "203":
          description: "Error <10> creando Item, {ex.Message}"
          content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <10> creando Item, {ex.Message}"
                      Code: 3  
        "204":
          description: "Error <1> // Error <3> al // Error <9> "
          content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <1>: No se pudo editar el Item en la DB."
                      Code: 4
                    - Msg: "Error <3>: Error en la portada."
                      Code: 4
                    - Msg: "Error <4>: Error en el título."
                      Code: 4
                    - Msg: "Error <5>: Error en la descripción."
                      Code: 4
                    - Msg: "Error <6>: Error en la duración del Album."
                      Code: 4
                    - Msg: "Error <7>: Error en la fecha de lanzamiento."
                      Code: 4 
                    - Msg: "Error <8>: Error en el campo TotalItems."
                      Code: 4  
                    - Msg: "Error <8>: No se pudo guardar en la DB, creando la relacion Album/Artista."
                      Code: 4     
                    - Msg: "Error <9>: El RegID a editar es nulo."
                      Code: 4
    delete:
      tags:
        - "creators"
      summary: "Eliminar un álbum (Documentado)"
      description: "Elimina un álbum asociado con el creador especificado por el CreatorID."
      operationId: "deleteAlbumByCreator"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Album:
                  type: "object"
                  properties:
                    AlbumID:
                      type: "integer"
                      example: 10
      responses:
        "200":
          description: "ItemID: {crudItem.Item.RegID} eliminado con éxito"
          content:
            application/json:
              schema:
                type: object
                properties:
                  Respuesta:
                    type: object
                    properties:
                      Mensaje:
                        type: string
                        example: "ItemID: {crudItem.Item.RegID} eliminado con éxito"
                      Código:
                        type: integer
                        example: 0
                  Álbum:
                    type: object
                    properties:
                      Título:
                        type: string
                        nullable: true
                      Descripción:
                        type: string
                        nullable: true
                      Duración:
                        type: string
                        nullable: true
                      PortadaURL:
                        type: string
                        format: uri
                        nullable: true
                      FechaLanzamiento:
                        type: string
                        format: date
                        nullable: true
                      TotalItems:
                        type: integer
                        nullable: true
                      Activo:
                        type: boolean
                        example: false
                      Artistas:
                        type: array
                        items:
                          type: string
                        nullable: true
                      IDÁlbum:
                        type: integer
                        nullable: true
                      IDPropietario:
                        type: integer
                        example: 0
                        nullable: true
          
        "203":
          description: "Error <3> desconocido: {e.Message}"
          content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <3> desconocido: {e.Message}"
                      Code: 3
        "204":
          description: "Error <1> // Error <2> // Error <6> "
          content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <1> eliminando registro en DB, itemID: {crudItem.Item.RegID}"
                      Code: 4
                    - Msg: "Error <2> registro no encontrado para el itemID: {crudItem.Item.RegID}"
                      Code: 4
                    - Msg: "Error <6>: El RegID del item a eliminar es nulo."
                      Code: 4    
 #############################
  /creators/list/album:
    put:
      tags:
        - "creators"
      summary: "Obtener lista de álbumes (Documentado)"
      description: "Obtiene una lista de todos los álbumes asociados con el creador especificado por el CreatorID. ERROR CUANDO SE USA ESTE CREATORID: UmVuUGxheTIwMjMk"
      operationId: "listAlbumsByCreator"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "xO4RhdK_YoFTS9V9ngNZhmRmzYI9sxL2ZMFz97Fj5Jc"
      responses:
        '200':
          description: "Se encontraron (n) registros en la DB."
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Msg:
                        type: string
                        example: "Se encontraron 89 registros en la DB."
                      Code:
                        type: integer
                        example: 0
                  Albums:
                    type: array
                    items:
                      type: object
                      properties:
                        Title:
                          type: string
                          example: "Solo Para Ti"
                        Description:
                          type: string
                          example: "“Solo para Ti” es el comienzo de su llamado al ministerio. Al escuchar esta producción encontraras letras que marcan la búsqueda de su presencia, una adoración genuina, un corazón agradecido, fidelidad y profundo amor por Jesús."
                        Length:
                          type: integer
                          example: 2280
                        PortadaURL:
                          type: string
                          format: uri
                          example: "https://guiah.tv/dl/portadas/music/album/wm_soloparati.jpg"
                        ReleaseDate:
                          type: string
                          format: date-time
                          example: "2012-01-01T12:00:00"
                        TotalItems:
                          type: integer
                          example: 10
                        Active:
                          type: boolean
                          example: true
                        Artists:
                          type: array
                          items:
                            type: object
                            properties:
                              ArtistID:
                                type: integer
                                example: 6
                              Title:
                                type: string
                                example: "Wendy Montilla"
                              Active:
                                type: boolean
                                example: true
                        AlbumID:
                          type: integer
                          example: 2
                        OwnerID:
                          type: integer
                          example: 0
        "201":
            description: "2 Errores en el code 1 "
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "No existen registros en la DB."
                      Code: 1
                    - Msg: "Error en CreatorID no coincide"
                      Code: 1
        "203":
          description: "Error {e.Message}"
          content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error {e.Message}"
                      Code: 3
                                  
  /creators/album/track:
    post:
      tags:
        - "creators"
      summary: "Crear una nueva pista en un álbum (Documentado)"
      description: "Permite a los creadores añadir una nueva pista a un álbum en su catálogo con la información proporcionada."
      operationId: "createAlbumTrack"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Track:
                  type: "object"
                  properties:
                    Title:
                      type: "string"
                      example: "Emanuel"
                    Length:
                      type: "integer"
                      example: 330
                    StreamURL:
                      type: "string"
                      format: "uri"
                      example: "https://rsq8.renplay.com/renplay/tracks/15-11-2023/EMMANUEL-DIOSENCASA-1080p.mp4/playlist.m3u8"
                    AlbumID:
                      type: "integer"
                      example: 19
                    TrackNumber:
                      type: "integer"
                      example: 13
                    IsVideo:
                      type: "boolean"
                      example: true
                    Artists:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          ArtistID:
                            type: "integer"
                    Genres:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          GenreID:
                            type: "integer"
                    Active:
                      type: "boolean"
                      example: true
                    Status:
                      type: "string"
                      example: "publicado"
      responses:
        '200':
          description: "Item creado con éxito"
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Msg:
                        type: string
                        example: "Item creado con éxito"
                      Code:
                        type: integer
                        example: 0
                  Track:
                    type: object
                    properties:
                      TrackID:
                        type: integer
                        example: 1130
                      Title:
                        type: string
                        example: "Emanuel"
                      Artists:
                        type: array
                        items:
                          type: object
                          properties:
                            ArtistID:
                              type: integer
                              example: 0
                      Length:
                        type: integer
                        example: 330
                      StreamURL:
                        type: string
                        format: uri
                        example: "https://rsq8.renplay.com/renplay/tracks/15-11-2023/EMMANUEL-DIOSENCASA-1080p.mp4/playlist.m3u8"
                      TrackNumber:
                        type: integer
                        example: 14
                      Active:
                        type: boolean
                        example: false
                      IsVideo:
                        type: boolean
                        example: true
                      AlbumID:
                        type: integer
                        example: 19
                      OwnerID:
                        type: integer
                        example: 1
                      Status:
                        type: string
                        example: "no publicado"
                      Genres:
                        type: array
                        items:
                          type: object
                          properties:
                            GenreID:
                              type: integer
                              example: 0
        "201":
          description: "Error creando Item, CreatorID no coincide"
          content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error creando Item, CreatorID no coincide"
                      Code: 1                      
        "202":
          description: "Error <2>: El tipo de track y trackNumber para ese AlbumID ya existe en la DB."
          content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <2>: El tipo de track y trackNumber para ese AlbumID ya existe en la DB."
                      Code: 2
        "203":
          description: "Error creando Item, {ex.Message}"
          content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error creando Item, {ex.Message}"
                      Code: 3              
                                        
        "204":
          description: "Error <1> // al // Error <9> "
          content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <1>: No se pudo guardar en la DB."
                      Code: 4
                    - Msg: "Error <3>: Error en el StreamURL."
                      Code: 4
                    - Msg: "Error <4>: Error en el título."
                      Code: 4
                    - Msg: "Error <5>: Error en el TrackNumber."
                      Code: 4
                    - Msg: "Error <6>: Error en la longitud."
                      Code: 4
                    - Msg: "Error <7>: Error en AlbumID."
                      Code: 4 
                    - Msg: "Error <8>: Error en el Status."
                      Code: 4
                    - Msg: "Error <9>: Error en los Artists."
                      Code: 4
                    - Msg: "Error <10>: Error en los Genres."
                      Code: 4  
                    - Msg: "Error <11>: No se pudo guardar en la DB, creando la relacion Track/Artistas."
                      Code: 4     
                    - Msg: "Error <12>: No se pudo guardar en la DB, creando la relacion Track/Artistas."
                      Code: 4 
    put:
      tags:
        - "creators"
      summary: "Editar una pista de un álbum (Documentado)"
      description: "Actualiza la información de una pista específica de un álbum asociado con el creador."
      operationId: "editAlbumTrack"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Track:
                  type: "object"
                  required: ["TrackID"]
                  properties:
                    TrackID:
                      type: "integer"
                      example: 276
                    Title:
                      type: "string"
                      example: "Dios En Casa"
                    Length:
                      type: "integer"
                      example: 292
                    StreamURL:
                      type: "string"
                      format: "uri"
                      example: "https://rsq8.renplay.com/renplay/tracks/18-09-2023/DIOSENCASA_MIELSANMARCOS720.mp4/playlist.m3u8"
                    AlbumID:
                      type: "integer"
                      example: 19
                    TrackNumber:
                      type: "integer"
                      example: 1
                    IsVideo:
                      type: "boolean"
                      example: true
                    Artists:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          ArtistID:
                            type: "integer"
                    Genres:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          GenreID:
                            type: "integer"
                    Active:
                      type: "boolean"
                      example: true
                    Status:
                      type: "string"
                      example: "publicado"
      responses:
        "200":
          description: "Item editado con éxito"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  Track:
                    type: "object"
                    properties:
                      TrackID:
                        type: "integer"
                      Title:
                        type: "string"
                      Artists:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            ArtistID:
                              type: "integer"
                      Length:
                        type: "integer"
                      StreamURL:
                        type: "string"
                        format: "uri"
                      TrackNumber:
                        type: "integer"
                      Active:
                        type: "boolean"
                      IsVideo:
                        type: "boolean"
                      AlbumID:
                        type: "integer"
                      OwnerID:
                        type: "integer"
                      Status:
                        type: "string"
                      Genres:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            GenreID:
                              type: "integer"
              examples:
                editedTrackExample:
                  value:
                    Response:
                      Msg: "Item editado con éxito"
                      Code: 0
                    Track:
                      TrackID: 276
                      Title: "Dios En Casa"
                      Artists:
                        - ArtistID: 0
                      Length: 292
                      StreamURL: "https://rsq8.renplay.com/renplay/tracks/18-09-2023/DIOSENCASA_MIELSANMARCOS720.mp4/playlist.m3u8"
                      TrackNumber: 1
                      Active: true
                      IsVideo: true
                      AlbumID: 19
                      OwnerID: 0
                      Status: "publicado"
                      Genres:
                        - GenreID: 0
        "201":
            description: "2 Errores en el code 1 "
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error editando, el RegID no se encontró en la DB"
                      Code: 1
                    - Msg: "Error editando Item, CreatorID no coincide"
                      Code: 1  
        "202":
            description: "Error <2>: El trackNumber nuevo para ese AlbumID ya existe en la DB."
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <2>: El trackNumber nuevo para ese AlbumID ya existe en la DB."
                      Code: 2 
        "203":
            description: "Error de ex editando Item, {ex.Message}"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error de ex editando Item, {ex.Message}"
                      Code: 3                
        "204":
            description: "Error <1> al Error <10>"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <1>: No se pudo editar el Item en la DB."
                      Code: 4
                    - Msg: "Error <3>: Error en el StreamURL."
                      Code: 4  
                    - Msg: "Error <4>: Error en el título."
                      Code: 4  
                    - Msg: "Error <5>: Error en el TrackNumber."
                      Code: 4
                    - Msg: "Error <6>: Error en la longitud."
                      Code: 4
                    - Msg: "Error <7>: Error en AlbumID."
                      Code: 4
                    - Msg: "Error <9>: Error en los Artists."
                      Code: 4
                    - Msg: "Error <9>: El RegID a editar es nulo."
                      Code: 4
                    - Msg: "Error <10>: No se pudo guardar en la DB, creando la relacion Track/Artistas."
                      Code: 4
                    - Msg: "Error <10>: Error en los Genres."
                      Code: 4  

    delete:
      tags:
        - "creators"
      summary: "Eliminar una pista de un álbum (Documentado)"
      description: "Elimina una pista específica de un álbum asociado con el creador."
      operationId: "deleteAlbumTrack"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Track:
                  type: "object"
                  properties:
                    TrackID:
                      type: "integer"
                      example: 36
      responses:
        "200":
          description: "ItemID: {crudItem.Item.RegID} eliminado con éxito"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  Track:
                    type: "object"
                    properties:
                      TrackID:
                        type: "integer"
                        example: 0
                      Title:
                        type: "string"
                       
                      Artists:
                        type: "array"
                        
                      Length:
                        type: "integer"
                        
                      StreamURL:
                        type: "string"
                        
                      TrackNumber:
                        type: "integer"
                        
                      Active:
                        type: "boolean"
                        
                      IsVideo:
                        type: "boolean"
                        
                      AlbumID:
                        type: "integer"
                       
                      OwnerID:
                        type: "integer"
                        
                      Status:
                        type: "string"
                       
                      Genres:
                        type: "array"
                        
              example:
                Response:
                  Msg: "ItemID: {crudItem.Item.RegID} eliminado con éxito"
                  Code: 0
        ##        

        "203":
            description: "Error <3> desconocido: {e.Message}"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <3> desconocido: {e.Message}"
                      Code: 3  
        "204":
            description: "Error <1> //  Error <2> // Error <3> // Error <6>"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <1> eliminando registro en DB, itemID: {crudItem.Item.RegID}"
                      Code: 4
                    - Msg: "Error <2> registro no encontrado para el itemID: {crudItem.Item.RegID}"
                      Code: 4  
                    - Msg: "Error <3> eliminando los valores de relaciones en DB, itemID: {crudItem.Item.RegID}"
                      Code: 4  
                    - Msg: "Error <6>: El RegID del item a eliminar es nulo."
                      Code: 4 
                     
  /creators/album/track/status:
      put:
        tags:
          - "creators"
        summary: "Cambiar el estado de una pista de un álbum (Documentado)"
        description: "Permite a los creadores cambiar el estado de una pista específica dentro de un álbum en su catálogo."
        operationId: "changeAlbumTrackStatus"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  CreatorID:
                    type: "string"
                    example: "UmVuUGxheTIwMjMk"
                  Track:
                    type: "object"
                    required: ["TrackID", "Status"]
                    properties:
                      TrackID:
                        type: "integer"
                        example: 9
                      Status:
                        type: "string"
                        example: "publicado"
                        enum:
                          - "publicado"
                          - "no publicado"
                          - "en revisión"
                          - "archivado"
        responses:
          "200":
            description: "Item editado con éxito"
            content:
              application/json:
                schema:
                  type: "object"
                  properties:
                    Response:
                      type: "object"
                      properties:
                        Msg:
                          type: "string"
                        Code:
                          type: "integer"
                    Track:
                      type: "object"
                      properties:
                        TrackID:
                          type: "integer"
                        Title:
                          type: "string"
                        Artists:
                          type: "array"
                          items:
                            type: "object"
                            properties:
                              ArtistID:
                                type: "integer"
                              Title:
                                type: "string"
                              Active:
                                type: "boolean"
                        Length:
                          type: "integer"
                        StreamURL:
                          type: "string"
                          format: "uri"
                        TrackNumber:
                          type: "integer"
                        Active:
                          type: "boolean"
                        IsVideo:
                          type: "boolean"
                        AlbumID:
                          type: "integer"
                        OwnerID:
                          type: "integer"
                        Status:
                          type: "string"
                        Genres:
                          example: "null"
                example:
                  Response:
                    Msg: "Item editado con éxito"
                    Code: 0
                  Track:
                    TrackID: 9
                    Title: "Has Morada"
                    Artists:
                      - ArtistID: 6
                        Title: "Wendy Montilla"
                        Active: true
                    Length: 215
                    StreamURL: "https://sina3.guiah.tv/guiah/music/2/6wm2t1.aac/playlist.m3u8"
                    TrackNumber: 1
                    Active: true
                    IsVideo: false
                    AlbumID: 2
                    OwnerID: 0
                    Status: "publicado"
                    Genres: null
          "201":
            description: "Error <2>: El RegID no se encontró en la DB  // Error <5>: El CreatorID no coincide"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <2>: El RegID no se encontró en la DB"
                      Code: 1 
                    - Msg: "Error <5>: El CreatorID no coincide"
                      Code: 1   
           
          "203":
              description: "Error de ex editando Item, {ex.Message}"
              content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Msg:
                          type: "string"
                        Code:
                          type: "integer"
                    example:
                      - Msg: "Error de ex editando Item, {ex.Message}"
                        Code: 3  
          "204":
              description: "Error <1> //  Error <3> // Error <4> //"
              content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Msg:
                          type: "string"
                        Code:
                          type: "integer"
                    example:
                      - Msg: "Error <1>: No se pudo editar el Item en la DB."
                        Code: 4
                      - Msg: "Error <3>: Error en el Status, no es un dato válido."
                        Code: 4  
                      - Msg: "Error <4>: El RegID a editar es nulo."
                        Code: 4    
                      
  /creators/get/album: ###### NO SE ENCUENTRA FUNCIONANDO #####
    put:
      tags:
        - "creators"
      summary: "Obtener información de un álbum (Documentado) preguntar sobre este"
      description: "Recupera la información sobre un álbum específico basado en el CreatorID y AlbumID."
      operationId: "getAlbumInfo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Album:
                  type: "object"
                  required: ["AlbumID"]
                  properties:
                    AlbumID:
                      type: "integer"
                      example: 19
      responses:
        "200":
          description: "Item consultado con éxito."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Item consultado con éxito."
                      Code:
                        type: "integer"
                        example: 0
                  Album:
                    type: "object"
                    properties:
                      Title:
                        type: "string"
                        example: "Dios En Casa"
                      Description:
                        type: "string"
                        example: "Dios En Casa"
                      Length:
                        type: "integer"
                        example: 4920
                      PortadaURL:
                        type: "string"
                        example: "https://rsq8.renplay.com:444/album/18-09-2023/gX9Kaw89ptpA9ScDXfKn2W_dios-en-casa.webp"
                      ReleaseDate:
                        type: "string"
                        format: "date-time"
                        example: "2022-03-18T20:26:25"
                      TotalItems:
                        type: "integer"
                        example: 12
                      Active:
                        type: "boolean"
                        example: true
                      Artists:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            ArtistID:
                              type: "integer"
                              example: 75
                            Title:
                              type: "string"
                              example: "Miel San Marcos"
                            Active:
                              type: "boolean"
                              example: true
                      Tracks:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            TrackID:
                              type: "integer"
                              example: 179
                            Title:
                              type: "string"
                              example: "Dios En Casa"
                            Artists:
                              type: "array"
                              items:
                                type: "object"
                                properties:
                                  ArtistID:
                                    type: "integer"
                                    example: 75
                                  Title:
                                    type: "string"
                                    example: "Miel San Marcos"
                                  Active:
                                    type: "boolean"
                                    example: true
                            Length:
                              type: "integer"
                              example: 292
                            StreamURL:
                              type: "string"
                              example: "https://rsq8.renplay.com/renplay/tracks/18-09-2023/xp3uH5woyh3s29X7XhXty2.aac/playlist.m3u8"
                            TrackNumber:
                              type: "integer"
                              example: 1
                            Active:
                              type: "boolean"
                              example: true
                            IsVideo:
                              type: "boolean"
                              example: false
                            AlbumID:
                              type: "integer"
                              example: 19
                            OwnerID:
                              type: "integer"
                              example: 1
                            Status:
                              type: "string"
                              example: "publicado"
                            Genres:
                              type: "array"
        "201":
          description: "Error <12> editando Item, CreatorID no coincide"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error <12> editando Item, CreatorID no coincide"
                      Code:
                        type: "integer"
                        example: 1
  /creators/podcast:
    post:
      tags:
        - "creators"
      summary: "Crear un nuevo podcast (Documentado)"
      description: "Permite a los creadores añadir un nuevo podcast a su catálogo con la información proporcionada."
      operationId: "createPodcast"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Podcast:
                  type: "object"
                  properties:
                    Title:
                      type: "string"
                      example: "Ruddy Gracia"
                    Description:
                      type: "string"
                      example: "Mensaje Completos de Bishop Ruddy Gracia fundador del ministerio Segadores de Vida..."
                    Language:
                      type: "string"
                      example: "es"
                    PortadaURL:
                      type: "string"
                      format: "uri"
                      example: "https://is1-ssl.mzstatic.com/image/thumb/Podcasts125/v4/94/12/43/9412435d-5289-f377-2162-b9f42951727e/mza_15457557164766212277.jpg/626x0w.webp"
                    ReleaseDate:
                      type: "string"
                      format: "date-time"
                      example: "2017-08-09T00:00:00"
                    Artists:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          ArtistID:
                            type: "integer"
                            example: 127
                    Active:
                      type: "boolean"
                      example: true
      responses:
        "200":
          description: "Item creado con éxito."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  Podcast:
                    type: "object"
                    properties:
                      Title:
                        type: "string"
                      Description:
                        type: "string"
                      PortadaURL:
                        type: "string"
                        format: "uri"
                      ReleaseDate:
                        type: "string"
                        format: "date-time"
                      TotalItems:
                        type: "integer"
                      Language:
                        type: "string"
                      Active:
                        type: "boolean"
                      Artists:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            ArtistID:
                              type: "integer"
                      PodcastID:
                        type: "integer"
                      OwnerID:
                        type: "integer"
              example:
                Response:
                  Msg: "Item creado con éxito"
                  Code: 0
                Podcast:
                  Title: "Ruddy Gracia."
                  Description: "Mensaje Completos de Bishop Ruddy Gracia fundador del ministerio Segadores de Vida...."
                  PortadaURL: "https://is1-ssl.mzstatic.com/image/thumb/Podcasts125/v4/94/12/43/9412435d-5289-f377-2162-b9f42951727e/mza_15457557164766212277.jpg/626x0w.webp"
                  ReleaseDate: "2017-08-09T00:00:00"
                  TotalItems: 0
                  Language: "es"
                  Active: false
                  Artists:
                    - ArtistID: 127
                  PodcastID: 13
                  OwnerID: 0
        "201":
            description: "Error creando Item, CreatorID no coincide"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error creando Item, CreatorID no coincide"
                      Code: 1           
        "202":
            description: "Error <2>: El título ya existe en la DB."
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <2>: El título ya existe en la DB."
                      Code: 2 
        "203":
            description: "Error creando Item, {ex.Message}"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error creando Item, {ex.Message}"
                      Code: 3  
        "204":
            description: "Error <1> //  Error <3> // Error <4> // Error <5> // Error <6> // Error <7> // Error <9> //"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <1>: No se pudo guardar en la DB."
                      Code: 4
                    - Msg: "Error <3>: Error en la portada."
                      Code: 4    
                    - Msg: "Error <4>: Error en el título."
                      Code: 4 
                    - Msg: "Error <5>: Error en la descripción."
                      Code: 4 
                    - Msg: "Error <6>: Error en la Language."
                      Code: 4 
                    - Msg: "Error <7>: Error en la fecha de lanzamiento."
                      Code: 4 
                    - Msg: "Error <9>: No se pudo guardar en la DB, creando la relacion Podcast/Artista."
                      Code: 4   
    put:
      tags:
        - "creators"
      summary: "Editar un podcast ((Marca error con ID 2 en podcast probar con PodcastID 7) (Documentado)" 
      description: "Permite a los creadores actualizar la información de un podcast existente en su catálogo. "
      operationId: "editPodcast"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Podcast:
                  type: "object"
                  properties:
                    PodcastID:
                      type: "integer"
                      example: 2
                    Title:
                      type: "string"
                      example: "Ruddy Gracia"
                    Description:
                      type: "string"
                      example: "Mensajes Completos de Bishop Ruddy Gracia fundador del ministerio Segadores de Vida..."
                    Language:
                      type: "string"
                      example: "es"
                    PortadaURL:
                      type: "string"
                      format: "uri"
                      example: "https://is1-ssl.mzstatic.com/image/thumb/Podcasts125/v4/94/12/43/9412435d-5289-f377-2162-b9f42951727e/mza_15457557164766212277.jpg/626x0w.webp"
                    ReleaseDate:
                      type: "string"
                      format: "date-time"
                      example: "2017-08-09T00:00:00"
                    Artists:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          ArtistID:
                            type: "integer"
                            example: 127
                    Active:
                      type: "boolean"
                      example: true
      responses:
        "200":
            description: "Item editado con éxito"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Item editado con éxito"
                      Code: 0
                    
        "201":
            description: "Error <11>  // Error <12>"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <11> editando Item, RegID no encontrado en la DB"
                      Code: 1
                    - Msg: "Error <12> editando Item, CreatorID no coincide"
                      Code: 1
        "202":
            description: "Error <2>: El título ya existe en la DB."
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <2>: El título ya existe en la DB."
                      Code: 2              
        "203":
            description: "Error <10> creando Item, {ex.Message}"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <10> creando Item, {ex.Message}"
                      Code: 3              
        "204":
            description: "Error <1>  // Error <4> // al // 9"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <1>: No se pudo editar el Item en la DB."
                      Code: 4
                    - Msg:  "Error <4>: Error en el título."    
                      Code: 4
                    - Msg: "Error <5>: Error en la descripción." 
                      Code: 4
                    - Msg: "Error <6>: Error en la Language."
                      Code: 4
                    - Msg: "Error <7>: Error en la fecha de lanzamiento."
                      Code: 4
                    - Msg: "Error <8>: No se pudo guardar en la DB, creando la relacion Album/Artista."
                      Code: 4
                    - Msg: "Error <9>: El PodcastID a editar es nulo."
                      Code: 4   
    delete:
        tags:
          - "creators"
        summary: "Eliminar un podcast (Documentado)"
        description: "Permite a los creadores eliminar un podcast de su catálogo."
        operationId: "deletePodcast"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  CreatorID:
                    type: "string"
                    example: "UmVuUGxheTIwMjMk"
                  Podcast:
                    type: "object"
                    properties:
                      PodcastID:
                        type: "integer"
                        example: 3
        responses:
          "200":
            description: "ItemID: {crudItem.Item.RegID} eliminado con éxito"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "ItemID: {crudItem.Item.RegID} eliminado con éxito"
                      Code: 0

                    
          "201":
            description: "Error: registro no encontrado para el itemID y el OwnerID especificados."
            content:
              application/json:
                schema:
                  type: "object"
                  properties:
                    Response:
                      type: "object"
                      properties:
                        Msg:
                          type: "string"
                        Code:
                          type: "integer"
                    Podcast:
                      type: "object"
                      properties:
                        Title:
                          type: "string"
                        Description:
                          type: "string"
                        PortadaURL:
                          type: "string"
                        ReleaseDate:
                          type: "string"
                          format: "date-time"
                        TotalItems:
                          type: "integer"
                        Language:
                          type: "string"
                        Active:
                          type: "boolean"
                        Artists:
                          type: "array"
                          items: {}
                        PodcastID:
                          type: "integer"
                        OwnerID:
                          type: "integer"
                example:
                  Response:
                    Msg: "Error: registro no encontrado para el itemID: 3 y el OwnerID: 1"
                    Code: 1
          "203":
            description: "Error <3> desconocido: {e.Message}"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <3> desconocido: {e.Message}"
                      Code: 0          
          "204":
            description: "Error <1>  // Error <2> // Error <3> // Error <6>"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <1> eliminando registro en DB, itemID: {crudItem.Item.RegID}"
                      Code: 4

                    - Msg: "Error <2> registro no encontrado para el itemID: {crudItem.Item.RegID}"         
                      Code: 4
                    - Msg: "Error <3> eliminando los valores de relaciones en DB, itemID: {crudItem.Item.RegID}"      
                      Code: 4
                    
                    - Msg: "Error <6>: El PodcastID del item a eliminar es nulo." 
                      Code: 4
                           
  /creators/get/podcast: #### NO PUEDO DOCUEMNTAR######3
        put:
          tags:
            - "creators"
          summary: "Obtener información de un podcast (Documentado)"
          description: "Recupera la información sobre un podcast específico basado en el CreatorID y PodcastID."
          operationId: "getPodcastinfo"
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: "object"
                  properties:
                    CreatorID:
                      type: "string"
                      example: "UmVuUGxheTIwMjMk"
                    Podcast:
                      type: "object"
                      required: ["PodcastID"]
                      properties:
                        PodcastID:
                          type: "integer"
                          example: 7
          responses:
            "200":
              description: "Item consultado con éxito."
              content:
                application/json:
                  schema:
                    type: "object"
                    properties:
                      Response:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                            example: "Item consultado con éxito."
                          Code:
                            type: "integer"
                            example: 0
                      Podcast:
                        type: "object"
                        properties:
                          Title:
                            type: "string"
                            example: "Ruddy Gracia"
                          Description:
                            type: "string"
                            example: "Mensajes Completos de Bishop Ruddy Gracia fundador del ministerio Segadores de Vida..."
                          PortadaURL:
                            type: "string"
                            example: "https://is1-ssl.mzstatic.com/image/thumb/Podcasts125/v4/94/12/43/9412435d-5289-f377-2162-b9f42951727e/mza_15457557164766212277.jpg/626x0w.webp"
                          ReleaseDate:
                            type: "string"
                            format: "date-time"
                            example: "2017-08-09T00:00:00"
                          TotalItems:
                            type: "integer"
                            example: 0
                          Language:
                            type: "string"
                            example: "es"
                          Active:
                            type: "boolean"
                            example: true
                          Artists:
                            type: "array"
                            items:
                              type: "object"
                              properties:
                                ArtistID:
                                  type: "integer"
                                  example: 127
                                Title:
                                  type: "string"
                                  example: "Ruddy Gracia"
                                Active:
                                  type: "boolean"
                                  example: true
                          Tracks:
                            type: "array"
                            items:
                              type: "object"
                              properties:
                                TrackID:
                                  type: "integer"
                                Title:
                                  type: "string"
                                Artists:
                                  type: "array"
                                  items:
                                    type: "object"
                                    properties:
                                      ArtistID:
                                        type: "integer"
                                        example: 127
                                      Title:
                                        type: "string"
                                        example: "Ruddy Gracia"
                                      Active:
                                        type: "boolean"
                                        example: true
                                Length:
                                  type: "integer"
                                StreamURL:
                                  type: "string"
                                TrackNumber:
                                  type: "integer"
                                Active:
                                  type: "boolean"
                                IsVideo:
                                  type: "boolean"
                                PodcastID:
                                  type: "integer"
                                Status:
                                  type: "string"
                                ReleaseDate:
                                  type: "string"
                                  format: "date-time"
                                OwnerID:
                                  type: "integer"
                          PodcastID:
                            type: "integer"
                            example: 2
                          OwnerID:
                            type: "integer"
                            example: 0
            "201":
              description: "Error <12> editando Item, CreatorID no coincide"
              content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Msg:
                          type: "string"
                        Code:
                          type: "integer"
                    example:
                      - Msg: "Error <12> editando Item, CreatorID no coincide"
                        Code: 1  

  /creators/podcast/track:      
    post:
      tags:
        - "creators"
      summary: "Crear una nueva pista para un podcast   (Documentado)"
      description: "Permite a los creadores añadir una nueva pista a un podcast en su catálogo con la información proporcionada."
      operationId: "createPodcastTrack"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Track:
                  type: "object"
                  properties:
                    Title:
                      type: "string"
                      example: "La facultad de la felicidad"
                    Length:
                      type: "integer"
                      example: 4140
                    StreamURL:
                      type: "string"
                      format: "uri"
                      example: "https://rsq8.renplay.com/renplay/tracks/13-10-2023/Lafacultaddelafelicidad.mp3/playlist.m3u8"
                    PodcastID:
                      type: "integer"
                      example: 7
                    TrackNumber:
                      type: "integer"
                      example: 348
                    IsVideo:
                      type: "boolean"
                      example: false
                    Artists:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          ArtistID:
                            type: "integer"
                            example: 127
                    Active:
                      type: "boolean"
                      example: true
                    ReleaseDate:
                      type: "string"
                      format: "date-time"
                      example: "2023-10-09T10:00:00"
                    Status:
                      type: "string"
                      example: "publicado"
      responses:
        '200':
          description: "Item creado con éxito"
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Msg:
                        type: string
                        example: "Item creado con éxito"
                      Code:
                        type: integer
                        example: 0
                  Track:
                    type: object
                    properties:
                      TrackID:
                        type: integer
                        example: 22
                      Title:
                        type: string
                        example: "La facultad de la felicidad.."
                      Artists:
                        type: array
                        items:
                          type: object
                          properties:
                            ArtistID:
                              type: integer
                              example: 127
                      Length:
                        type: integer
                        example: 4140
                      StreamURL:
                        type: string
                        format: uri
                        example: "https://rsq8.renplay.com/renplay/tracks/13-10-2023/Lafacultaddelafelicidad.mp3/playlist.m3u8"
                      TrackNumber:
                        type: integer
                        example: 350
                      Active:
                        type: boolean
                        example: false
                      IsVideo:
                        type: boolean
                        example: false
                      PodcastID:
                        type: integer
                        example: 2
                      Status:
                        type: string
                        example: "no publicado"
                      ReleaseDate:
                        type: string
                        format: date-time
                        example: "2023-10-09T10:00:00"
                      OwnerID:
                        type: integer
                        example: 0
        "201":
            description: "Error creando Item, CreatorID no coincide"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error creando Item, CreatorID no coincide"
                      Code: 1                
        "202":
            description: "Error <2>: El trackNumber nuevo para ese AlbumID ya existe en la DB."
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <2>: El trackNumber para ese PodcastID ya existe en la DB."
                      Code: 2
        "203":
            description: "Error creando Item, {ex.Message}"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error creando Item, {ex.Message}"
                      Code: 2              
        "204":
            description: "Error <1> // Error <3> // Error <8> //"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                      Code:
                        type: "integer"
                  example:
                    - Msg: "Error <1>: No se pudo guardar en la DB."
                      Code: 4
                    - Msg: "Error <3>: Error en el StreamURL."
                      Code: 4 
                    - Msg: "Error <4>: Error en el título."
                      Code: 4
                    - Msg: "Error <5>: Error en el TrackNumber."
                      Code: 4
                    - Msg: "Error <6>: Error en la longitud."
                      Code: 4
                    - Msg: "Error <7>: Error en AlbumID."
                      Code: 4    
                    - Msg: "Error <8>: Error en el Status."
                      Code: 4    
                    - Msg: "Error <8>: No se pudo guardar en la DB, creando la relacion Track/Artistas."
                      Code: 4  

    put:
      tags:
        - "creators"
      summary: "Editar una pista de podcast (falla con el PodcastID 2 pero se encuentra funcionando con el ID 7) (DOCUMENTADO)"         ####Preguntar sobre este si la documentacion esta bien####
      description: "Permite a los creadores actualizar la información de una pista específica de un podcast en su catálogo."
      operationId: "editPodcastTrack"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Track:
                  type: "object"
                  properties:
                    TrackID:
                      type: "integer"
                      example: 6
                    Title:
                      type: "string"
                      example: "La facultad de la felicidad"
                    Length:
                      type: "integer"
                      example: 4140
                    StreamURL:
                      type: "string"
                      format: "uri"
                      example: "https://rsq8.renplay.com/renplay/tracks/13-10-2023/Lafacultaddelafelicidad.mp3/playlist.m3u8"
                    PodcastID:
                      type: "integer"
                      example: 7
                    TrackNumber:
                      type: "integer"
                      example: 348
                    IsVideo:
                      type: "boolean"
                      example: false
                    Artists:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          ArtistID:
                            type: "integer"
                            example: 127
                    Active:
                      type: "boolean"
                      example: true
                    ReleaseDate:
                      type: "string"
                      format: "date-time"
                      example: "2023-10-09T11:00:00"
                    Status:
                      type: "string"
                      example: "publicado"
      responses:
        "200":
          description: "Item editado con éxito"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Item editado con éxito"
                      Code:
                        type: "integer"
                        example: 0
                  Track:
                    type: "object"
                    properties:
                      TrackID:
                        type: "integer"
                        example: 6
                      Title:
                        type: "string"
                        example: "La facultad de la felicidad"
                      Artists:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            ArtistID:
                              type: "integer"
                              example: 127
                      Length:
                        type: "integer"
                        example: 4140
                      StreamURL:
                        type: "string"
                        example: "https://rsq8.renplay.com/renplay/tracks/13-10-2023/Lafacultaddelafelicidad.mp3/playlist.m3u8"
                      TrackNumber:
                        type: "integer"
                        example: 348
                      Active:
                        type: "boolean"
                        example: true
                      IsVideo:
                        type: "boolean"
                        example: false
                      PodcastID:
                        type: "integer"
                        example: 2
                      Status:
                        type: "string"
                        example: "publicado"
                      ReleaseDate:
                        type: "string"
                        format: "date-time"
                        example: "2023-10-09T11:00:00"
                      OwnerID:
                        type: "integer"
                        example: 0
        "201":
          description: "Error editando, el RegID no se encontró en la DB // Error editando Item, CreatorID no coincide"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    Msg:
                      type: "string"
                    Code:
                      type: "integer"
                example:
                  - Msg: "Error editando, el RegID no se encontró en la DB"
                    Code: 1
                  
                  - Msg: "Error editando Item, CreatorID no coincide"       
                    Code: 1  
        "202":
          description: "Error <2>: El trackNumber nuevo para ese AlbumID ya existe en la DB."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    Msg:
                      type: "string"
                    Code:
                      type: "integer"
                example:
                  - Msg: "Error <2>: El trackNumber nuevo para ese AlbumID ya existe en la DB."
                    Code: 2
                  
                                
        "203":
          description: "Codigo 3"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error de ex editando Item, {ex.Message}"
                      Code:
                        type: "integer"
                        example: 3                             
        "204":
          description: "Error <1>  // Error <3> // Error <6> // Error <7> // Error <8> // Error <9> // Error <10>"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    Msg:
                      type: "string"
                    Code:
                      type: "integer"
                example:
                  - Msg: "Error <1>: No se pudo editar el Item en la DB."
                    Code: 4
                  
                  - Msg: "Error <3>: Error en el StreamURL."         
                    Code: 4
                  - Msg: "Error <4>: Error en el título."       
                    Code: 4
                  - Msg: "Error <5>: Error en el TrackNumber."    
                    Code: 4
                  - Msg: "Error <6>: Error en la longitud."   
                    Code: 4
                  - Msg: "Error <7>: Error en AlbumID."   
                    Code: 4
                  - Msg: "Error <8>: Error en el Status."   
                    Code: 4
                  - Msg: "Error <9>: El RegID a editar es nulo."   
                    Code: 4
                  - Msg: "Error <10>: No se pudo guardar en la DB, creando la relacion Track/Artistas." 
                    Code: 4  
    delete:
      tags:
        - "creators"
      summary: "Eliminar una pista de podcast (Documentado)"
      description: "Permite a los creadores eliminar una pista específica de un podcast en su catálogo."
      operationId: "deletePodcastTrack"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Track:
                  type: "object"
                  properties:
                    TrackID:
                      type: "integer"
                      example: 4
      responses:
        "200":
          description: "ItemID: 5 eliminado con éxito"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "ItemID: 5 eliminado con éxito"
                      Code:
                        type: "integer"
                        example: 0
                  Track:
                    type: "object"
                    properties:
                      TrackID:
                        type: "integer"
                        example: 0
                      Title:
                        type: "string"
                        nullable: true
                        example: null
                      Artists:
                        type: "array"
                        nullable: true
                        example: null
                      Length:
                        type: "integer"
                        nullable: true
                        example: null
                      StreamURL:
                        type: "string"
                        nullable: true
                        example: null
                      TrackNumber:
                        type: "integer"
                        nullable: true
                        example: null
                      Active:
                        type: "boolean"
                        nullable: true
                        example: null
                      IsVideo:
                        type: "boolean"
                        nullable: true
                        example: null
                      PodcastID:
                        type: "integer"
                        nullable: true
                        example: null
                      Status:
                        type: "string"
                        nullable: true
                        example: null
                      ReleaseDate:
                        type: "string"
                        format: "date-time"
                        nullable: true
                        example: null
                      OwnerID:
                        type: "integer"
                        example: 0
        "203":
          description: "Codigo 3"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error <3> desconocido: {e.Message}"
                      Code:
                        type: "integer"
                        example: 3                             
        "204":
          description: "Error <1> // Error <2> // Error <3> // Error <6> "
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    Msg:
                      type: "string"
                    Code:
                      type: "integer"
                example:
                  - Msg: "Error <1> eliminando registro en DB, itemID: {crudItem.Item.RegID}"
                    Code: 4
                  - Msg: "Error <2> registro no encontrado para el itemID: {crudItem.Item.RegID}"               
                    Code: 4
                  - Msg: "Error <3> eliminando los valores de relaciones en DB, itemID: {crudItem.Item.RegID}"         
                    Code: 4
                  - Msg: "Error <6>: El PodcastID del item a eliminar es nulo."       
                    Code: 4
  /creators/list/podcast:
    put:
      tags:
        - "creators"
      summary: "Listar los podcasts de un creador (Documentado)"
      description: "Obtiene un listado de todos los podcasts asociados con un creador específico."
      operationId: "listPodcastsByCreator"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
      responses:
        "200":
          description: "Se encontraron {n} registros en la DB."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Se encontraron {n} registros en la DB."
                      Code:
                        type: "integer"
                        example: 0
                  Podcasts:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Title:
                          type: "string"
                        Description:
                          type: "string"
                        PortadaURL:
                          type: "string"
                        ReleaseDate:
                          type: "string"
                          format: "date-time"
                        TotalItems:
                          type: "integer"
                        Language:
                          type: "string"
                        Active:
                          type: "boolean"
                        Artists:
                          type: "array"
                          items:
                            type: "object"
                            properties:
                              ArtistID:
                                type: "integer"
                              Title:
                                type: "string"
                              Active:
                                type: "boolean"
                        PodcastID:
                          type: "integer"
                        OwnerID:
                          type: "integer"
                example:
                  Response:
                    Msg: "Se encontraron 2 registros en la DB."
                    Code: 0
                  Podcasts:
                    - Title: "Ruddy Gracia"
                      Description: "Mensajes Completos de Bishop Ruddy Gracia..."
                      PortadaURL: "https://is1-ssl.mzstatic.com/image/thumb/Podcasts125/v4/94/12/43/9412435d-5289-f377-2162-b9f42951727e/mza_15457557164766212277.jpg/626x0w.webp"
                      ReleaseDate: "2017-08-09T00:00:00"
                      TotalItems: 0
                      Language: "es"
                      Active: true
                      Artists:
                        - ArtistID: 127
                          Title: "Ruddy Gracia"
                          Active: true
                      PodcastID: 2
                      OwnerID: 0
                    - Title: "Latido"
                      Description: "Latido Podcast, un podcast por Un Corazón..."
                      PortadaURL: "https://rsq8.renplay.com:444/podcast2/24-10-2023/krxmeW3fJP3kFs4PatWnj9_latido.webp"
                      ReleaseDate: "2023-10-24T12:00:00"
                      TotalItems: 0
                      Language: "es"
                      Active: true
                      Artists:
                        - ArtistID: 130
                          Title: "Un Corazón"
                          Active: true
                      PodcastID: 7
                      OwnerID: 0
         
        "201":
           description: "No existen registros en la DB./ Error <2>: Contraseña Incorrecta"
           content:
               application/json:
                 schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Response:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                    example:
                      - Response:
                          Msg: "No existen registros en la DB."
                          Code: 1
                      - Response:
                          Msg: "Error en CreatorID no coincide"
                          Code: 1 
       
        "203":
          description: "Error {e.Message}"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error {e.Message}"
                      Code:
                        type: "integer"
                        example: 3
        "204":
          description: "No cuenta con code 4"  
  /creators/tracklink: ############# No puedo documentar ###########
    put:
      tags:
        - "creators"
      summary: "Actualizar enlace de una pista (Documentado)"
      description: "s"
      operationId: "updateTracklink"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                TrackID:
                  type: "integer"
                  example: 1
                ContentType:
                  type: "string"
                  example: "podcasttrack"
                  enum:
                    - "musictrack"
                    - "podcasttrack"
                    - "audiobooktrack"
      responses:
        '200':
          description: "Operación exitosa que devuelve una URL para acceso al recurso."
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Msg:
                        type: string
                        example: ""
                      Code:
                        type: integer
                        example: 0
                  Url:
                    type: string
                    format: uri
                    example: "https://rsq8.renplay.com/renplay/tracks/11-10-2023/RompiendoporProcesos.mp3/playlist.m3u8?wmsAuthSign=c2VydmVyX3RpbWU9NS8xLzIwMjQgNTowNzoxNiBQTSZoYXNoX3ZhbHVlPVV5TmI0L2pWeXU5d0xTdlFQZWdmK1E9PSZ2YWxpZG1pbnV0ZXM9NSZpZD1VTVZVVUdYSEVUSVdNSk1L" 
        "201":
              description: "Track no encontrado para el TrackID:{trackLinkRequest.TrackID}."
              content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Msg:
                          type: "string"
                        Code:
                          type: "integer"
                    example:
                      - Msg: "Track no encontrado para el TrackID:{trackLinkRequest.TrackID}."
                        Code: 1
        "203":
              description: "Error desconocido:{e.Message}."
              content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Msg:
                          type: "string"
                        Code:
                          type: "integer"
                    example:
                      - Msg: "Error desconocido:{e.Message}."
                        Code: 3                
        "204":
              description: "Creator ID no válido."
              content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Msg:
                          type: "string"
                        Code:
                          type: "integer"
                    example:
                      - Msg: "Creator ID no válido."
                        Code: 4            
  /creators/podcast/track/status:
    put:
      tags:
        - "creators"
      summary: "Cambiar el estado de una pista de podcast  (Documentado)"
      description: "Permite a los creadores cambiar el estado de una pista de podcast en su catálogo."
      operationId: "updatePodcastTrackStatus"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Track:
                  type: "object"
                  required: ["TrackID", "Status"]
                  properties:
                    TrackID:
                      type: "integer"
                      example: 1
                    Status:
                      type: "string"
                      example: "publicado"
                      enum:
                        - "publicado"
                        - "no publicado" ####Falta revisar estos####
                        - "en revisión"
                        - "archivado"
      responses:
        "200":
          description: "Item editado con éxito"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Item editado con éxito"
                      Code:
                        type: "integer"
                        example: 0
                  Track:
                    type: "object"
                    properties:
                      TrackID:
                        type: "integer"
                        example: 1
                      Title:
                        type: "string"
                        example: "Rompiendo por Procesos"
                      Artists:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            ArtistID:
                              type: "integer"
                              example: 127
                            Title:
                              type: "string"
                              example: "Ruddy Gracia"
                            Active:
                              type: "boolean"
                              example: true
                      Length:
                        type: "integer"
                        example: 3720
                      StreamURL:
                        type: "string"
                        example: "https://rsq8.renplay.com/renplay/tracks/11-10-2023/RompiendoporProcesos.mp3/playlist.m3u8"
                      TrackNumber:
                        type: "integer"
                        example: 349
                      Active:
                        type: "boolean"
                        example: true
                      IsVideo:
                        type: "boolean"
                        example: false
                      PodcastID:
                        type: "integer"
                        example: 2
                      Status:
                        type: "string"
                        example: "publicado"
                      ReleaseDate:
                        type: "string"
                        format: "date-time"
                        example: "2023-10-10T07:00:00"
                      OwnerID:
                        type: "integer"
                        example: 0
        "201":
          description: "Respuestas variadas dependiendo si hay error en CreatorID o en la DB."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    Msg:
                      type: "string"
                    Code:
                      type: "integer"
                example:
                  - Msg: "Error <2>: El RegID no se encontró en la DB"
                    Code: 1
                  - Msg: "Error <5>: El CreatorID no coincide"
                    Code: 1                   
        "203":
          description: "Error de ex editando Item, {ex.Message}"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error de ex editando Item, {ex.Message}"
                      Code:
                        type: "integer"
                        example: 3                
        "204":
          description: "Error <1> // Error <3> // Error <4> "
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    Msg:
                      type: "string"
                    Code:
                      type: "integer"
                example:
                  - Msg: "Error <1>: No se pudo editar el Item en la DB."
                    Code: 4
                  - Msg: "Error <3>: Error en el Status, no es un dato válido."                    
                    Code: 4
                  - Msg: "Error <4>: El RegID a editar es nulo."                    
                    Code: 4
    
  /creators/list/genres: #Verificado y documentado
    put:
      tags:
        - "creators"
      summary: "Listar los géneros de un creador (Documentado) preguntar sobre este"
      description: "Obtiene un listado de todos los géneros asociados con un creador específico."
      operationId: "listGenresByCreator"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
      responses:
        "200":
          description: "Se encontraron {dt.Rows.Count} registros en la DB."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Se encontraron {dt.Rows.Count} registros en la DB."
                      Code:
                        type: "integer"
                        example: 0
                  Genres:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        GenreID:
                          type: "integer"
                        Name_en:
                          type: "string"
                        Name_es:
                          type: "string"
                    example: [
                      {"GenreID": 1, "Name_en": "Pop", "Name_es": "Pop"},
                      {"GenreID": 2, "Name_en": "Rock", "Name_es": "Rock"},
                      {"GenreID": 3, "Name_en": "Hip-Hop/Rap", "Name_es": "Hip-Hop/Rap"},
                      {"GenreID": 4, "Name_en": "Electronic", "Name_es": "Electrónica"},
                      {"GenreID": 5, "Name_en": "Country", "Name_es": "Country"},
                      {"GenreID": 6, "Name_en": "Jazz", "Name_es": "Jazz"},
                      {"GenreID": 7, "Name_en": "Classical", "Name_es": "Clásica"},
                      {"GenreID": 8, "Name_en": "R&B/Soul", "Name_es": "R&B/Soul"},
                      {"GenreID": 9, "Name_en": "Indie/Alternative", "Name_es": "Indie/Alternativa"},
                      {"GenreID": 10, "Name_en": "Latin", "Name_es": "Latino"},
                      {"GenreID": 14, "Name_en": "Folk", "Name_es": "Folk"},
                      {"GenreID": 16, "Name_en": "Ballad", "Name_es": "Balada"},
                      {"GenreID": 17, "Name_en": "Gospel", "Name_es": "Góspel"},
                      {"GenreID": 18, "Name_en": "Christian", "Name_es": "Cristiano"},
                      {"GenreID": 19, "Name_en": "Contemporary", "Name_es": "Contemporáneo"},
                      {"GenreID": 20, "Name_en": "Reggaeton", "Name_es": "Reguetón"},
                      {"GenreID": 21, "Name_en": "Latin Urban", "Name_es": "Urbano latino"},
                      {"GenreID": 22, "Name_en": "Acoustic music", "Name_es": "Acústica"},
                      {"GenreID": 23, "Name_en": "Mariachi", "Name_es": "Mariachi"}
                    ]
        "201":
          description: "Respuestas variadas dependiendo si hay error en CreatorID o en la DB."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    Msg:
                      type: "string"
                    Code:
                      type: "integer"
                example:
                  - Msg: "No existen registros en la DB."
                    Code: 1
                  - Msg: "Error en CreatorID no coincide"
                    Code: 1   
        "203":
          description: "Codigo 3"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error: {ex.Message}"
                      Code:
                        type: "integer"
                        example: 3                    
        "204":
          description: "No se cuenta con codigo 4"
                     
  /creators/genre: #Verificado y documentado 
    post:
      tags:
        - "creators"
      summary: "Crear un nuevo género (Documentado)"
      description: "Permite a los creadores añadir un nuevo género musical a su catálogo."
      operationId: "createGenre"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Genre:
                  type: "object"
                  properties:
                    Name_en:
                      type: "string"
                      example: "Blues"
                    Name_es:
                      type: "string"
                      example: "Blues"
      responses:
        "200":
          description: "Genero creado con éxito"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Genero creado con éxito"
                      Code:
                        type: "integer"
                        example: 0
                  Genre:
                    type: "object"
                    properties:
                      GenreID:
                        type: "integer"
                        example: 25
                      Name_en:
                        type: "string"
                        example: "Lo-Fi"
                      Name_es:
                        type: "string"
                        example: "Lo-Fi"
        "201":
          description: "Error creando Artista, CreatorID no coincide"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error creando Artista, CreatorID no coincide"
                      Code:
                        type: "integer"
                        example: 1                
        "202":
          description: "Error <2>: El nombre ya existe en la DB."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error <2>: El nombre ya existe en la DB."
                      Code:
                        type: "integer"
                        example: 2                
        "203":
          description: "Error creando Artista, {ex.Message}"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error creando Artista, {ex.Message}"
                      Code:
                        type: "integer"
                        example: 3                
        "204":
          description: "Error <1> / / Error <3> / / Error <4> / / Error <6>"    
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    Msg:
                      type: "string"
                    Code:
                      type: "integer"
                example:
                  - Msg: "Error <1>: No se pudo guardar en la DB."
                    Code: 4
                  - Msg: "Error <3>: Error en el campo Name_en."
                    Code: 4
                  - Msg: "Error <4>: Error en el campo Name_es."
                    Code: 4   
                        
###################################################################
    put:
      tags:
        - "creators"
      summary: "Editar un género (Documentado)"
      description: "Permite a los creadores actualizar la información de un género musical en su catálogo"
      operationId: "editGenre"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required: 
                - "GenreID"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Genre:
                  type: "object"
                  properties:
                    Name_en:
                      type: "string"
                      example: "Blues"
                    Name_es:
                      type: "string"
                      example: "Blues"
                    GenreID:
                      type: "integer"
                      example: 11
      responses:
        "200":
          description: "Item editado con éxito"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Item editado con éxito"
                      Code:
                        type: "integer"
                        example: 0
                  Genre:
                    type: "object"
                    properties:
                      GenreID:
                        type: "integer"
                        example: 25
                      Name_en:
                        type: "string"
                        example: "Lo-FI."
                      Name_es:
                        type: "string"
                        example: "Lo-FI."
        "201":
          description: "Error editando Item, El ItemID no existe en la DB."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    Msg:
                      type: "string"
                    Code:
                      type: "integer"
                example:
                  - Msg: "Error editando Item, El ItemID no existe en la DB."
                    Code: 1
                  - Msg: "Error editando Item, CreatorID no coincide"
                    Code: 1                 
        "202":
          description: "Respuestas variadas dependiendo si el campo Name_en o Name_es ya existe en la DB."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    Msg:
                      type: "string"
                    Code:
                      type: "integer"
                example:
                  - Msg: "Error <2>: El campo Name_en ya existe en la DB."
                    Code: 2
                  - Msg: "Error <3>: El campo Name_es ya existe en la DB."
                    Code: 2 
        "203":
          description: "Error editando Item, {ex.Message}"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error editando Item, {ex.Message}"
                      Code:
                        type: "integer"
                        example: 3
                        
        "204":
          description: "Error <1> / / Error <3> / / Error <4> / / Error <6>"    
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    Msg:
                      type: "string"
                    Code:
                      type: "integer"
                example:
                  - Msg: "Error <1>: No se pudo editar el Item en la DB."
                    Code: 4
                  - Msg: "Error <3>: Error en el campo Name_en."
                    Code: 4
                  - Msg: "Error <4>: Error en el campo Name_es."
                    Code: 4   
                  - Msg: "Error <6>: El RegID del item a editar es nulo."
                    Code: 4
                     
#############################################################################################
    delete:
      tags:
        - "creators"
      summary: "Eliminar un género musical (Documentado)"
      description: "Permite a los creadores eliminar un género musical de su catálogo."
      operationId: "deleteGenre"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required: 
                - "GenreID"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Genre:
                  type: "object"
                  properties:
                    GenreID:
                      type: "integer"
                      example: 11
      responses:
        "200":
          description: "ItemID: {crudItem.Genre.RegID} eliminado con éxito"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "ItemID: {crudItem.Genre.RegID} eliminado con éxito"
                      Code:
                        type: "integer"
                        example: 0
                  Genre:
                    type: "object"
                    properties:
                      GenreID:
                        type: "integer"
                        example: 0
        "203":
          description: "Error <3> desconocido: {e.Message}"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error <3> desconocido: {e.Message}"
                      Code:
                        type: "integer"
                        example: 3
        "204":
          description: "Varias respuestas de error posibles cuando se intenta eliminar un registro o sus relaciones en la DB."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    Response:
                      type: "object"
                      properties:
                        Msg:
                          type: "string"
                        Code:
                          type: "integer"
                example:
                  - Response:
                      Msg: "Error <1> eliminando registro en DB, itemID: {crudItem.Genre.RegID}"
                      Code: 4
                  - Response:
                      Msg: "Error <2> registro no encontrado para el itemID: {crudItem.Genre.RegID}"
                      Code: 4
                  - Response:
                      Msg: "Error <3> eliminando los valores de relaciones en DB, itemID: {crudItem.Genre.RegID}"
                      Code: 4
                  - Response:
                      Msg: "Error <6>: El RegID del item a eliminar es nulo."
                      Code: 4                
  /creators/owner/info: #Verificado y documentado
    put:
      tags:
        - "creators"
      summary: "Obtener información del cliente (Documentado)"
      description: "-"
      operationId: "."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                CreatorRegID:
                  type: "integer"
                  example: 2
      responses:
        "200":
          description: "Operación exitosa"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "OwnerID: 2 encontrado con éxito"
                      Code:
                        type: "integer"
                        example: 0
                  Creator:
                    type: "object"
                    properties:
                      UserReg:
                        type: "integer"
                        example: 2
                      CreatorID:
                        type: "string"
                        example: "xO4RhdK_YoFTS9V9ngNZhmRmzYI9sxL2ZMFz97Fj5Jc"
                      UserName:
                        type: "string"
                        example: "DonPec"
                      Name:
                        type: "string"
                        example: "Marco Padilla"
                      Email:
                        type: "string"
                        example: "donpec@me.com"
                      Password:
                        type: "string"
                        example: "********"
                      Phone:
                        type: "string"
                        example: "8115557980"
                      SubPartnerID:
                        type: "integer"
                        example: 1
                      RoleType:
                        type: "integer"
                        example: 0
                      UserType:
                        type: "integer"
                        example: 0
                      Active:
                        type: "boolean"
                        example: true
                      Created:
                        type: "string"
                        example: "2024-03-26T17:56:08.063"
                      LastModified:
                        type: "string"
                        example: "2024-04-12T17:05:13.43"
                      LastAccess:
                        type: "string"
                        example: "2024-04-12T14:23:10.38"


        "201":
          description: "Error <1> no se encontró en la DB, para OwnerID: {ownerDetail.RegID}"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error: Ya existe un usuario con este correo en uso."
                      Code:
                        type: "integer"
                        example: 1
        "203":
          description: "Error <2> desconocido: {e.Message}"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error <2> desconocido: {e.Message}"
                      Code:
                        type: "integer"
                        example: 3   
  /creators/owner/login: #Verificado y documentado
    post:
      tags:
        - "creators"
      summary: "Iniciar sesión como creador (Documentado)"
      description: "Permite a un propietario iniciar sesión en su cuenta proporcionando su correo electrónico y contraseña."
      operationId: "ownerLogin"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                Email:
                  type: "string"
                  format: "email"
                  example: "donpec@icloud.com"
                Password:
                  type: "string"
                  example: "JDJ5JDEwJFlkR3FzbTRKU2RMTnFzRDhkQkxDdXVEVkVKVXU1c2I4UFdrRm1YV2NDVmp6eldYS1gvenJh"
      responses:
        "200":
          description: "Login exitoso"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Login exitoso"
                      Code:
                        type: "integer"
                        example: 0
                  Creator:
                    type: "object"
                    properties:
                      UserReg:
                        type: "integer"
                        example: 3
                      CreatorID:
                        type: "string"
                        example: "Kde8EkncPsWDaKckaq97FL7HcLuRJzf_oB6dQvK4tcI"
                      UserName:
                        type: "string"
                        example: "DonPec"
                      Name:
                        type: "string"
                        example: "Marco Padilla"
                      Email:
                        type: "string"
                        example: "donpec@icloud.com"
                      Phone:
                        type: "string"
                        example: "8115557980"
                      SubPartnerID:
                        type: "integer"
                        example: 1
                      RoleType:
                        type: "integer"
                        example: 0
                      UserType:
                        type: "integer"
                        example: 0
                      Active:
                        type: "boolean"
                        example: true
                      Created:
                        type: "string"
                        example: "2024-03-26T18:02:04.52"
                      LastModified:
                        type: "string"
                        example: "2024-04-05T16:27:28.807"
                      LastAccess:
                        type: "string"
                        example: "2024-04-12T14:23:10.38"

        "202":
          description: "Error: Ya existe un usuario con este correo en uso."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error: Ya existe un usuario con este correo en uso."
                      Code:
                        type: "integer"
                        example: 2
        "203":
          description: "Error: No se pudo agregar a la DB. // Error: {e.Message}"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    Response:
                      type: "object"
                      properties:
                        Msg:
                          type: "string"
                        Code:
                          type: "integer"
                example:
                  - Response:
                      Msg: "Error: No se pudo agregar a la DB."
                      Code: 3
                  - Response:
                      Msg: "Error: {e.Message}"
                      Code: 3            
        "204":
           description: "Error <1>: El usuario no se encuentra activo, contacte a su administrador. / Error <2>: Contraseña Incorrecta"
           content:
               application/json:
                 schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Response:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                    example:
                      - Response:
                          Msg: "Error <1>: El usuario no se encuentra activo, contacte a su administrador."
                          Code: 4
                      - Response:
                          Msg: "Error <2>: Contraseña Incorrecta"
                          Code: 4                 
  /creators/owner/create: #Verificado y documentado
    post:
      tags:
        - "creators"
      summary: "Crear creador (Documentado)"
      description: "Permite crear un nuevo usuario con la información proporcionada."
      operationId: "createOwner"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Creator:
                  type: "object"
                  properties:
                    UserName:
                      type: "string"
                      example: "DonPec"
                    Name:
                      type: "string"
                      example: "Marco Padilla"
                    Email:
                      type: "string"
                      format: "email"
                      example: "dot@renplay.com"
                    Password:
                      type: "string"
                      example: "Jx1zfLfaaEqv7nA4nM2XPQ=="
                    Phone:
                      type: "string"
                      example: "8115557980"
      responses:
        "200":
          description: "Error: Ya existe un usuario con este correo en uso."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error: Ya existe un usuario con este correo en uso."
                      Code:
                        type: "integer"
                        example: 2
                  Creator:
                    type: "object"
                    properties:
                      UserReg:
                        type: "integer"
                        example: 0
                      CreatorID:
                        example: "null"
                      Name:
                        example: "null"
                      Email:
                        example: "null"
                      Phone:
                        example: "null"
                      SubPartnerID:
                        type: "integer"
                        example: 0
                      RoleType:
                        type: "integer"
                        example: 0
                      UserType:
                        type: "integer"
                        example: 0
                      Active:
                        type: "boolean"
                        example: false
                      Created:
                        type: "string"
                        example: "0001-01-01T00:00:00"
                      LastModified:
                        example: "null"
                      LastAccess:
                        example: "null"
        "202":
          description: "Error: Ya existe un usuario con este correo en uso."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error: Ya existe un usuario con este correo en uso."
                      Code:
                        type: "integer"
                        example: 2
        "203":
          description: "Error: No se pudo agregar a la DB. // Error: {ex.Message} "
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    Response:
                      type: "object"
                      properties:
                        Msg:
                          type: "string"
                        Code:
                          type: "integer"
                example:
                  - Response:
                      Msg: "Error: No se pudo agregar a la DB."
                      Code: 3
                  - Response:
                      Msg: "Error: {ex.Message}"
                      Code: 3                 
        "204":
          description: "Error <1>: La clave de acceso proporcionada no es válida."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error <1>: La clave de acceso proporcionada no es válida."
                      Code:
                        type: "integer"
                        example: 4                
  /creators/owner/update/password: #Verificado y documentado
    post:
      tags:
        - "creators"
      summary: "Actualizar contraseña del creador (Documentado)"
      description: "Permite actualizar la contraseña del usuario creador con la información proporcionada."
      operationId: "updateOwnerPassword"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Creator:
                  type: "object"
                  properties:
                    UserReg:
                      type: "integer"
                      example: 2
                    Password:
                      type: "string"
                      example: "Jx1zfLfaaEqv7nA4nM2XPQ=="
      responses:
        "200":
          description: "Actualización exitosa"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Actualización exitosa"
                      Code:
                        type: "integer"
                        example: 0
                  Creator:
                    type: "object"
                    properties:
                      UserReg:
                        type: "integer"
                        example: 2
                      CreatorID:
                        type: "string"
                        example: "QrvxWr5baSPR9ECNTXDXM1z1b3w48TPvxpinL1vhSv8"
                      UserName:
                        type: "string"
                        example: "DonPec"
                      Name:
                        type: "string"
                        example: "Marco Padilla"
                      Email:
                        type: "string"
                        format: "email"
                        example: "mpadilla@renplay.com"
                      Phone:
                        type: "string"
                        example: "8115557980"
                      SubPartnerID:
                        type: "integer"
                        example: 0
                      RoleType:
                        type: "integer"
                        example: 0
                      UserType:
                        type: "integer"
                        example: 0
                      Active:
                        type: "boolean"
                        example: true
                      Created:
                        type: "string"
                        example: "2024-03-26T17:56:08.063"
                      LastModified:
                        type: "string"
                        example: "2024-04-04T18:08:10.913644-06:00"
                      LastAccess:
                        type: "string"
                        example: "2024-03-26T20:28:37.63"
        "201":
          description: "Error: No existe un usuario para el UserReg: {creatorUser.Creator.UserReg} proporcionado."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error: No existe un usuario para el UserReg: {creatorUser.Creator.UserReg} proporcionado."
                      Code:
                        type: "integer"
                        example: 1                
        "202":
          description: "Error: El valor anterior es igual al proporcionado."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error: El valor anterior es igual al proporcionado."
                      Code:
                        type: "integer"
                        example: 2
                  
        "203":
          description: "Error: No se pudo actualizar la DB"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Error: No se pudo actualizar la DB"
                      Code:
                        type: "integer"
                        example: 3                
        "204":
          description: "Error <1>: La clave de acceso proporcionada no es válida. // Error <2>: No se proporcionó el valor a cambiar correctamente."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    Response:
                      type: "object"
                      properties:
                        Msg:
                          type: "string"
                        Code:
                          type: "integer"
                example:
                  - Response:
                      Msg: "Error <1>: La clave de acceso proporcionada no es válida."
                      Code: 4
                  - Response:
                      Msg: "Error <2>: No se proporcionó el valor a cambiar correctamente."
                      Code: 4                      
  /creators/owner/update/name: #Verificado y documentado posible mejora (cuando no se inserta un valor en el name como quiera lo guarda, cuando deberia dar una advertencia)
    post:
      tags:
        - "creators"
      summary: "Actualizar nombre del creador (Documentado)"
      description: "Permite actualizar el nombre del usuario creador con la información proporcionada."
      operationId: "updateOwnerName"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Creator:
                  type: "object"
                  properties:
                    UserReg:
                      type: "integer"
                      example: 2
                    Name:
                      type: "string"
                      example: "Marco Padilla"
      responses:
        '200':
          description: "Actualización exitosa"
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Msg:
                        type: string
                        example: "Actualización exitosa"
                      Code:
                        type: integer
                        example: 0
                  Creator:
                    type: object
                    properties:
                      UserReg:
                        type: integer
                        example: 2
                      CreatorID:
                        type: string
                        example: "xO4RhdK_YoFTS9V9ngNZhmRmzYI9sxL2ZMFz97Fj5Jc"
                      UserName:
                        type: string
                        example: "DonPec"
                      Name:
                        type: string
                        example: "Marco Padillas"
                      Email:
                        type: string
                        format: email
                        example: "donpec@me.com"
                      Phone:
                        type: string
                        example: "8115557980"
                      SubPartnerID:
                        type: integer
                        example: 1
                      RoleType:
                        type: integer
                        example: 0
                      UserType:
                        type: integer
                        example: 0
                      Active:
                        type: boolean
                        example: true
                      Created:
                        type: string
                        format: date-time
                        example: "2024-03-26T17:56:08.063"
                      LastModified:
                        type: string
                        format: date-time
                        example: "2024-04-21T22:17:17.9066836-06:00"
                      LastAccess:
                        type: string
                        format: date-time
                        example: "2024-04-12T14:23:10.38"
        "201":
            description: "2 en code 1" 
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Response:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                  example:
                    - Response:
                        Msg: "Error: No existe un usuario para el UserReg: {creatorUser.Creator.UserReg} proporcionado."
                        Code: 1
                    - Response:
                        Msg: "Error: No se puede modifcar el UserReg: {creatorUser.Creator.UserReg} proporcionado."
                        Code: 3 
        "202":
            description: "Error: El valor anterior es igual al proporcionado." 
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Response:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                  example:
                    - Response:
                        Msg: "Error: El valor anterior es igual al proporcionado."
                        Code: 2
                                     
        "203":
            description: "Error: No se pudo actualizar la DB // Error: {ex.Message} " 
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Response:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                  example:
                    - Response:
                        Msg: "Error: No se pudo actualizar la DB"
                        Code: 3
                    - Response:
                        Msg: "Error: {ex.Message}"
                        Code: 3     
                        
                                      
        "204":
            description: "Error <1> // Error <2>"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Response:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                  example:
                    - Response:
                        Msg: "Error <1>: La clave de acceso proporcionada no es válida."
                        Code: 4
                    - Response:
                        Msg: "Error <2>: No se proporcionó el valor a cambiar correctamente."
                        Code: 4    
  /creators/owner/update/activation:
    post:
      tags:
        - "creators"
      summary: "Actualizar estado de activación del creador (Documentado)"
      description: "Permite actualizar el estado de activación de la cuenta de un creador usando la información proporcionada."
      operationId: "updateOwnerActivation"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Creator:
                  type: "object"
                  properties:
                    UserReg:
                      type: "integer"
                      example: 2
                    Active:
                      type: "boolean"
                      example: true
      responses:
         '200':
          description: "Actualización exitosa."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  Response:
                    type: "object"
                    properties:
                      Msg:
                        type: "string"
                        example: "Actualización exitosa"
                      Code:
                        type: "integer"
                        example: 0
                  Creator:
                    type: "object"
                    properties:
                      UserReg:
                        type: "integer"
                        example: 2
                      CreatorID:
                        type: "string"
                        example: "xO4RhdK_YoFTS9V9ngNZhmRmzYI9sxL2ZMFz97Fj5Jc"
                      UserName:
                        type: "string"
                        example: "DonPec"
                      Name:
                        type: "string"
                        example: "Marco Padilla"
                      Email:
                        type: "string"
                        example: "donpec@me.com"
                      Phone:
                        type: "string"
                        example: "8115557980"
                      SubPartnerID:
                        type: "integer"
                        example: 1
                      RoleType:
                        type: "integer"
                        example: 0
                      UserType:
                        type: "integer"
                        example: 0
                      Active:
                        type: "boolean"
                        example: false
                      Created:
                        type: "string"
                        format: "date-time"
                        example: "2024-03-26T17:56:08.063"
                      LastModified:
                        type: "string"
                        format: "date-time"
                        example: "2024-04-24T15:45:07.7523257-06:00"
                      LastAccess:
                        type: "string"
                        format: "date-time"
                        example: "2024-04-12T14:23:10.38"
         "201":
            description: "Error: El Active status es igual al proporcionado."
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Response:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                  example:
                    
                    - Response:
                        Msg: "Error: No existe un usuario para el UserReg: {creatorUser.Creator.UserReg} proporcionado."
                        Code: 1
                    - Response:
                        Msg: "Error: No se puede modifcar el UserReg: { creatorUser.Creator.UserReg } proporcionado."
                        Code: 1
                        
                        
         "202":
            description: "Error: El Active status es igual al proporcionado."
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Response:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                  example:
                    - Response:
                        Msg: "Error: El Active status es igual al proporcionado."
                        Code: 2
                                     
         "203":
            description: "Error: No se pudo actualizar la DB // Error: {ex.Message} " 
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Response:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                  example:
                    - Response:
                        Msg: "Error: No se pudo actualizar la DB"
                        Code: 3
                    - Response:
                        Msg: "Error: {ex.Message}"
                        Code: 3
                    - Response:
                        Msg: "Error <3>: {e.Message}"
                        Code: 3     
                        
                                      
         "204":
            description: "Error <1> // Error <2>"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Response:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                  example:
                    - Response:
                        Msg: "Error <1>: La clave de acceso proporcionada no es válida."
                        Code: 4
                    - Response:
                        Msg: "Error <2>: No se proporcionó el valor a cambiar correctamente."
                        Code: 4    
  /creators/owner/update/email:
    post:
      tags:
        - "creators"
      summary: "Actualizar el correo electrónico del creador (Documentado)"
      description: "Permite actualizar el correo electrónico asociado a un creador especificado por el CreatorID."
      operationId: "updateCreatorEmail"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Creator:
                  type: object
                  properties:
                    UserReg:
                      type: "integer"
                      example: 2
                    Email:
                      type: "string"
                      format: "email"
                      example: "mpadilla@lap55.com"
      responses:
        '200':
          description: "Actualización exitosa"
          content:
            application/json:
              schema:
                type: object
                properties:
                  Msg:
                    type: string
                    example: "Actualización exitosa"
                  Code:
                    type: integer
                    example: 0
        "201":
            description: "2 respuestas en code 1"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Response:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                  example:
                    - Response:
                        Msg: "Error: No existe un usuario para el UserReg: {creatorUser.Creator.UserReg} proporcionado."
                        Code: 1
                    - Response:
                        Msg: "Error: No se puede modifcar el UserReg: {creatorUser.Creator.UserReg} proporcionado."
                        Code: 1            
        "202":
            description: "Error: Ya existe un usuario con este correo en uso. // Error: El valor anterior es igual al proporcionado."
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Response:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                  example:
                    - Response:
                        Msg: "Error: Ya existe un usuario con este correo en uso."
                        Code: 2
                    - Response:
                        Msg: "Error: El valor anterior es igual al proporcionado."
                        Code: 2    
        "203":
            description: "Error: No se pudo actualizar la DB // Error <2>: {ex.Message} // Error: {e.Message}"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Response:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                  example:
                    - Response:
                        Msg:  "Error: No se pudo actualizar la DB"
                        Code: 3
                    - Response:
                        Msg:  "Error <2>: {ex.Message}"
                        Code: 3
                    - Response:
                        Msg:  "Error: {e.Message}"
                        Code: 3    
        "204":
            description: "Error <1> // Error <2>"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Response:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                  example:
                    - Response:
                        Msg: "Error <1>: La clave de acceso proporcionada no es válida."
                        Code: 4
                    - Response:
                       Msg: "Error <2>: No se proporcionó el valor a cambiar correctamente."
                       Code: 4    
  /creators/owner/update/phone:
    post:
      tags:
        - "creators"
      summary: "Actualizar el número de teléfono del creador (Documentado)"
      description: "Permite actualizar el número de teléfono asociado a un creador especificado por el CreatorID."
      operationId: "updateCreatorPhone"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CreatorID:
                  type: "string"
                  example: "UmVuUGxheTIwMjMk"
                Creator:
                  type: object
                  properties:
                    UserReg:
                      type: "integer"
                      example: 2
                    Phone:
                      type: "string"
                      example: "8115557980"
      responses:
        '200':
          description: "Actualización exitosa"
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Msg:
                        type: string
                        example: "Actualización exitosa"
                      Code:
                        type: integer
                        example: 0
                  Creator:
                    type: object
                    properties:
                      UserReg:
                        type: integer
                        example: 0
                      CreatorID:
                        type: string
                        nullable: true
                      Name:
                        type: string
                        nullable: true
                      Email:
                        type: string
                        nullable: true
                      Phone:
                        type: string
                        nullable: true
                      SubPartnerID:
                        type: integer
                        example: 0
                      RoleType:
                        type: integer
                        example: 0
                      UserType:
                        type: integer
                        example: 0
                      Active:
                        type: boolean
                        example: false
                      Created:
                        type: string
                        format: date-time
                        example: "0001-01-01T00:00:00"
                      LastModified:
                        type: string
                        format: date-time
                        nullable: true
                      LastAccess:
                        type: string
                        format: date-time
                        nullable: true 
        "201":
            description: "2 respuestas en code 1"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Response:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                  example:
                    - Response:
                        Msg: "Error: No existe un usuario para el UserReg: {creatorUser.Creator.UserReg} proporcionado."
                        Code: 1
                    - Response:
                        Msg: "Error: No se puede modifcar el UserReg: {creatorUser.Creator.UserReg} proporcionado."
                        Code: 1            
        "202":
            description: " Error: El valor anterior es igual al proporcionado."
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Response:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                  example:
                   
                    - Response:
                        Msg: "Error: El valor anterior es igual al proporcionado."
                        Code: 2    
        "203":
            description: "Error: No se pudo actualizar la DB // Error <2>: {ex.Message} // Error: {e.Message}"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Response:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                  example:
                    - Response:
                        Msg:  "Error: No se pudo actualizar la DB"
                        Code: 3
                    - Response:
                        Msg:  "Error <2>: {ex.Message}"
                        Code: 3
                    - Response:
                        Msg:  "Error: {e.Message}"
                        Code: 3    
        "204":
            description: "Error <1> // Error <2>"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      Response:
                        type: "object"
                        properties:
                          Msg:
                            type: "string"
                          Code:
                            type: "integer"
                  example:
                    - Response:
                        Msg: "Error <1>: La clave de acceso proporcionada no es válida."
                        Code: 4
                    - Response:
                       Msg: "Error <2>: No se proporcionó el valor a cambiar correctamente."
                       Code: 4               
  /music/homelib:
    post:
      tags:
        - "homeLib"
      summary: "Crear un nuevo ítem en la biblioteca personal (Documentado)"
      description: "Permite a los usuarios añadir un nuevo ítem a su biblioteca de música personal en la plataforma."
      operationId: "crearItemBibliotecaPersonal"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - DeviceID
                - ProfileID
                - HomeLibItem
              properties:
                DeviceID:
                  type: "string"
                  example: "cmMdk1g8E-ID40g0cqe8tiGb5AlGnlKLcPaVRKkrv2g"
                ProfileID:
                  type: "integer"
                  example: 216
                HomeLibItem:
                  type: "object"
                  required:
                    - ContentType
                    - ItemID
                  properties:
                    ContentType:
                      type: "string"
                      example: "album"
                    ItemID:
                      type: "integer"
                      example: 3
      responses:
        '200':
          description: "Item agregado con éxito"
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Msg:
                        type: string
                        example: "Item agregado con éxito"
                      Code:
                        type: integer
                        example: 1
                  HomeLibItem:
                    type: object
                    properties:
                      ContentType:
                        type: string
                        nullable: true
                      ItemID:
                        type: integer
                        nullable: true
        "201":
              description: "Error <7>: DeviceID no encontrado // Error <8>: usuario con suscripcion no vigente "
              content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Response:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                    example:
                      - Response:
                          Msg: "Error <7>: DeviceID no encontrado"
                          Code: 1
                      - Response:    
                          Msg: "Error <8>: usuario con suscripcion no vigente"
                          Code: 1
        "202":
              description: "Error <1>: Elemento duplicado en la DB"
              content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Response:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                    example:
                      - Response:
                          Msg: "Error <1>: Elemento duplicado en la DB"
                          Code: 2
        "203":
              description: "Error <6>: {ex.Message}"
              content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Response:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                    example:
                      - Response:
                          Msg: "Error <6>: {ex.Message}"
                          Code: 3                   
        "204":
              description: "Error <2> al <5>"
              content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Response:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                    example:
                      - Response:
                          Msg: "Error <2>: Valor de ContentType no puede ser nulo"
                          Code: 4 
                      - Response:
                          Msg: "Error <3>: Valor de ItemID no puede ser nulo"
                          Code: 4 
                      - Response:
                          Msg: "Error <4>: El valor de ContentType no es un valor aceptado."
                          Code: 4 
                      - Response:
                          Msg: "Error <5>: no se pudo escribir en la DB."
                          Code: 4            

    put:
      tags:
        - "homeLib"
      summary: "Obtener el resumen de HomeLib (Preguntar sobre el estatus de subscription)"
      description: "Obtiene el resumen de los ítems de la biblioteca personal de música del usuario."
      operationId: "obtenerResumenHomeLib"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - DeviceID
                - ProfileID
              properties:
                DeviceID:
                  type: "string"
                  example: "cmMdk1g8E-ID40g0cqe8tiGb5AlGnlKLcPaVRKkrv2g"
                ProfileID:
                  type: "integer"
                  example: 216
      responses:
        "200":
          description: ""
        "400":
          description: ""

    delete:
      tags:
        - "homeLib"
      summary: "Eliminar un ítem de la biblioteca personal (Documentado)"
      description: "Permite a los usuarios eliminar un ítem específico de su biblioteca de música personal en la plataforma."
      operationId: "eliminarItemBibliotecaPersonal"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - DeviceID
                - ProfileID
                - HomeLibItem
              properties:
                DeviceID:
                  type: "string"
                  example: "cmMdk1g8E-ID40g0cqe8tiGb5AlGnlKLcPaVRKkrv2g"
                ProfileID:
                  type: "integer"
                  example: 216
                HomeLibItem:
                  type: "object"
                  required:
                    - ContentType
                    - ItemID
                  properties:
                    ContentType:
                      type: "string"
                      example: "album"
                    ItemID:
                      type: "integer"
                      example: 3
      responses:
        '200':
          description: "Respuesta con información sobre un ítem de la biblioteca del usuario."
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Msg:
                        type: string
                        example: "Item eliminado con exito."
                      Code:
                        type: integer
                        example: 1
                  HomeLibItem:
                    type: object
                    properties:
                      ContentType:
                        type: string
                        nullable: true
                        example: null
                      ItemID:
                        type: integer
                        nullable: true
                        example: null
        "201":
              description: "Error <7>: DeviceID no encontrado // Error <8>: usuario con suscripcion no vigente"
              content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Response:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                    example:
                      - Response:
                          Msg: "Error <7>: DeviceID no encontrado"
                          Code: 1
                      - Response:
                          Msg: "Error <8>: usuario con suscripcion no vigente"
                          Code: 1     
        "203":
              description: "Error <5>: {ex.Message}"
              content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Response:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                    example:
                      - Response:
                          Msg: "Error <5>: {ex.Message}"
                          Code: 3                 
        "204":
              description: "Error <1> al <5>"
              content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Response:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                    example:
                      - Response:
                          Msg: "Error <1>: no se encontró item a eliminar en la DB para los valores envíados."
                          Code: 4 
                      - Response:
                          Msg: "Error <2>: Valor de ContentType no puede ser nulo"
                          Code: 4 
                      - Response:
                          Msg: "Error <3>: Valor de ItemID no puede ser nulo"
                          Code: 4 
                      - Response:
                          Msg: "Error <4>: El valor de ContentType no es un valor aceptado."
                          Code: 4 
                      - Response:
                          Msg: "Error <5>: no se pudo escribir en la DB."
                          Code: 4                 
          ######FALTA ENCONTRAR LA MANERA EN QUE FUNCIONE######
  /music/hl:
    put:
      tags:
        - "homeLib"
      summary: "Obtener sección de HomeLib (Falta documentar)"
      description: "Obtiene una sección específica de la biblioteca de música personal del usuario, como playlists, álbumes, artistas, pistas, audiolibros, pistas de audiolibros, podcasts, pistas de podcasts o videoclips."
      operationId: "obtenerSeccionHomeLib"
      parameters:
        - in: query
          name: ContentType
          required: true
          schema:
            type: "string"
            enum: ["musiccollection", "album", "artist", "track", "audiobook", "audiobooktrack", "podcast", "podcasttrack", "videoclip"]
          description: "El tipo de contenido de la biblioteca personal que se desea obtener."
        - in: header
          name: DeviceID
          required: true
          schema:
            type: "string"
            example: "cmMdk1g8E-ID40g0cqe8tiGb5AlGnlKLcPaVRKkrv2g"
          description: "Identificador único del dispositivo del usuario."
        - in: header
          name: ProfileID
          required: true
          schema:
            type: "integer"
            example: 216
          description: "Identificador del perfil del usuario en la plataforma."
      responses:
        "200":
          description: ""
        
        "400":
          description: ""
  /music/related:
    put:
      tags:
        - "RelatedContent"
      summary: "Obtiene el contenido relacionado al artista solicitado (Revisar los responses de sucription)"
      description: "Devuelve información de contenido relacionado con un artista específico, como álbumes, pistas o contenido de similar interés basado en el artista proporcionado."
      operationId: "obtenerContenidoRelacionadoArtista"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                DeviceID:
                  type: "string"
                  example: "cmMdk1g8E-ID40g0cqe8tiGb5AlGnlKLcPaVRKkrv2g"
                ProfileID:
                  type: "integer"
                  example: 216
                MediaItem:
                  type: "object"
                  properties:
                    ContentType:
                      type: "string"
                      example: "artist"
                    ItemID:
                      type: "integer"
                      example: 73
      responses:
        '200':
          description: "Respuesta que incluye el estado de la suscripción y los contenidos de la biblioteca musical del usuario. "
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties:
                      Msg:
                        type: string
                        example: "Contenido generado con éxito"
                      Code:
                        type: integer
                        example: 0
                  MusicContent:
                    type: object
                    properties:
                      SuscriptionStatus:
                        type: integer
                        example: 1
                      SuscriptionResponse:
                        type: string
                        example: "Se omite validacion."
                      MusicSections:
                        type: array
                        items:
                          type: object
                          properties:
                            Title:
                              type: string
                              example: "Canciones"
                            Title_en:
                              type: string
                              example: "Songs"
                            Description_en:
                              type: string
                              nullable: true
                            Description:
                              type: string
                              nullable: true
                            PortadaURL:
                              type: string
                              format: uri
                              nullable: true
                            ReleaseDate:
                              type: string
                              format: date-time
                              example: "0001-01-01T00:00:00"
                            PosterType:
                              type: string
                              example: "0"
                            ContentType:
                              type: string
                              example: "track"
                            ParentSection:
                              type: string
                              nullable: true
                            MusicCollectionID:
                              type: integer
                              example: 2224
                            Orden:
                              type: integer
                              example: 0
                            TotalItems:
                              type: integer
                              example: 10
                            Length:
                              type: integer
                              example: 0
                            OwnerID:
                              type: integer
                              example: 0
                            IsPublic:
                              type: boolean
                              example: false
                            IsLiked:
                              type: boolean
                              example: false
                            IsInHomeLib:
                              type: boolean
                              example: false
                            IsEditable:
                              type: boolean
                              example: false
                            Tracks:
                              type: array
                              items:
                                type: object
                                properties:
                                  RegID:
                                    type: integer
                                    example: 45
                                  Title:
                                    type: string
                                    example: "Abre Tus Ojos"
                                  Artists:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        ArtistID:
                                          type: integer
                                          example: 73
                                        Title:
                                          type: string
                                          example: "Steve Cordon"
                                  Length:
                                    type: integer
                                    example: 299
                                  TrackNumber:
                                    type: integer
                                    example: 1
                                  IsVideo:
                                    type: boolean
                                    example: false
                                  IsLiked:
                                    type: boolean
                                    example: false
                                  IsInHomeLib:
                                    type: boolean
                                    example: false
                                  Active:
                                    type: boolean
                                    example: true
                                  AlbumID:
                                    type: integer
                                    example: 16
                                  PortadaURL:
                                    type: string
                                    format: uri
                                    example: "https://i.scdn.co/image/ab67616d0000b2731141453fafa118e840dbcc4b"
                                  AlbumTitle:
                                    type: string
                                    example: "En Una Cruz"
                                  Genres:
                                    type: array
                                    items:
                                      type: string
                                      nullable: true
        "201":
              description: "No se econtraron resultados para el artistaID: {postItem.MediaItem.ItemID}"
              content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Response:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                    example:
                      - Response:
                          Msg: "No se econtraron resultados para el artistaID: {postItem.MediaItem.ItemID}"
                          Code: 1
                          
        "204":
              description: "Error <1>: El tipo de contenido debe ser 'artist'"
              content:
                application/json:
                  schema:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        Response:
                          type: "object"
                          properties:
                            Msg:
                              type: "string"
                            Code:
                              type: "integer"
                    example:
                      - Response:
                          Msg: "Error <1>: El tipo de contenido debe ser 'artist'"
                          Code: 4 
                    
